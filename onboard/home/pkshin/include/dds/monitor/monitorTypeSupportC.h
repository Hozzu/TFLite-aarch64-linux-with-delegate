// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.12
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_codegen.cpp:149

#ifndef _TAO_IDL_MONITORTYPESUPPORTC_WLLWIS_H_
#define _TAO_IDL_MONITORTYPESUPPORTC_WLLWIS_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "monitor_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"
#include /**/ "dds/Versioned_Namespace.h"

#include "monitorC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 12
#error This file should be regenerated with TAO_IDL
#endif

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace OpenDDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

  namespace DCPS
  {

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:99

    typedef ::TAO::DCPS::ZeroCopyDataSeq< OpenDDS::DCPS::ServiceParticipantReport, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ServiceParticipantReportSeq;
    

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_SERVICEPARTICIPANTREPORTTYPESUPPORT__VAR_OUT_CH_)
#define _OPENDDS_DCPS_SERVICEPARTICIPANTREPORTTYPESUPPORT__VAR_OUT_CH_

    class ServiceParticipantReportTypeSupport;
    typedef ServiceParticipantReportTypeSupport *ServiceParticipantReportTypeSupport_ptr;
    typedef TAO_Objref_Var_T<ServiceParticipantReportTypeSupport> ServiceParticipantReportTypeSupport_var;
    typedef TAO_Objref_Out_T<ServiceParticipantReportTypeSupport> ServiceParticipantReportTypeSupport_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export ServiceParticipantReportTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef ServiceParticipantReportTypeSupport_ptr _ptr_type;
      typedef ServiceParticipantReportTypeSupport_var _var_type;
      typedef ServiceParticipantReportTypeSupport_out _out_type;

      // The static operations.
      static ServiceParticipantReportTypeSupport_ptr _duplicate (ServiceParticipantReportTypeSupport_ptr obj);

      static void _tao_release (ServiceParticipantReportTypeSupport_ptr obj);

      static ServiceParticipantReportTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ServiceParticipantReportTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ServiceParticipantReportTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ServiceParticipantReportTypeSupport (void);

      

      virtual ~ServiceParticipantReportTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportTypeSupport (const ServiceParticipantReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportTypeSupport (ServiceParticipantReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportTypeSupport &operator= (const ServiceParticipantReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportTypeSupport &operator= (ServiceParticipantReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_SERVICEPARTICIPANTREPORTDATAWRITER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_SERVICEPARTICIPANTREPORTDATAWRITER__VAR_OUT_CH_

    class ServiceParticipantReportDataWriter;
    typedef ServiceParticipantReportDataWriter *ServiceParticipantReportDataWriter_ptr;
    typedef TAO_Objref_Var_T<ServiceParticipantReportDataWriter> ServiceParticipantReportDataWriter_var;
    typedef TAO_Objref_Out_T<ServiceParticipantReportDataWriter> ServiceParticipantReportDataWriter_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export ServiceParticipantReportDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef ServiceParticipantReportDataWriter_ptr _ptr_type;
      typedef ServiceParticipantReportDataWriter_var _var_type;
      typedef ServiceParticipantReportDataWriter_out _out_type;

      // The static operations.
      static ServiceParticipantReportDataWriter_ptr _duplicate (ServiceParticipantReportDataWriter_ptr obj);

      static void _tao_release (ServiceParticipantReportDataWriter_ptr obj);

      static ServiceParticipantReportDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ServiceParticipantReportDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ServiceParticipantReportDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::OpenDDS::DCPS::ServiceParticipantReport & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::OpenDDS::DCPS::ServiceParticipantReport & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::OpenDDS::DCPS::ServiceParticipantReport & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::OpenDDS::DCPS::ServiceParticipantReport & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::OpenDDS::DCPS::ServiceParticipantReport & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::OpenDDS::DCPS::ServiceParticipantReport & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::OpenDDS::DCPS::ServiceParticipantReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::OpenDDS::DCPS::ServiceParticipantReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::ServiceParticipantReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::ServiceParticipantReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ServiceParticipantReportDataWriter (void);

      

      virtual ~ServiceParticipantReportDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportDataWriter (const ServiceParticipantReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportDataWriter (ServiceParticipantReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportDataWriter &operator= (const ServiceParticipantReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportDataWriter &operator= (ServiceParticipantReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_SERVICEPARTICIPANTREPORTDATAREADER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_SERVICEPARTICIPANTREPORTDATAREADER__VAR_OUT_CH_

    class ServiceParticipantReportDataReader;
    typedef ServiceParticipantReportDataReader *ServiceParticipantReportDataReader_ptr;
    typedef TAO_Objref_Var_T<ServiceParticipantReportDataReader> ServiceParticipantReportDataReader_var;
    typedef TAO_Objref_Out_T<ServiceParticipantReportDataReader> ServiceParticipantReportDataReader_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export ServiceParticipantReportDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef ServiceParticipantReportDataReader_ptr _ptr_type;
      typedef ServiceParticipantReportDataReader_var _var_type;
      typedef ServiceParticipantReportDataReader_out _out_type;

      // The static operations.
      static ServiceParticipantReportDataReader_ptr _duplicate (ServiceParticipantReportDataReader_ptr obj);

      static void _tao_release (ServiceParticipantReportDataReader_ptr obj);

      static ServiceParticipantReportDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ServiceParticipantReportDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ServiceParticipantReportDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::OpenDDS::DCPS::ServiceParticipantReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::OpenDDS::DCPS::ServiceParticipantReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::OpenDDS::DCPS::ServiceParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::ServiceParticipantReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::ServiceParticipantReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ServiceParticipantReportDataReader (void);

      

      virtual ~ServiceParticipantReportDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportDataReader (const ServiceParticipantReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportDataReader (ServiceParticipantReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportDataReader &operator= (const ServiceParticipantReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ServiceParticipantReportDataReader &operator= (ServiceParticipantReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };
  
  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
  
  } // module OpenDDS::DCPS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module OpenDDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace OpenDDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

  namespace DCPS
  {

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:99

    typedef ::TAO::DCPS::ZeroCopyDataSeq< OpenDDS::DCPS::DomainParticipantReport, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> DomainParticipantReportSeq;
    

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DOMAINPARTICIPANTREPORTTYPESUPPORT__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DOMAINPARTICIPANTREPORTTYPESUPPORT__VAR_OUT_CH_

    class DomainParticipantReportTypeSupport;
    typedef DomainParticipantReportTypeSupport *DomainParticipantReportTypeSupport_ptr;
    typedef TAO_Objref_Var_T<DomainParticipantReportTypeSupport> DomainParticipantReportTypeSupport_var;
    typedef TAO_Objref_Out_T<DomainParticipantReportTypeSupport> DomainParticipantReportTypeSupport_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DomainParticipantReportTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DomainParticipantReportTypeSupport_ptr _ptr_type;
      typedef DomainParticipantReportTypeSupport_var _var_type;
      typedef DomainParticipantReportTypeSupport_out _out_type;

      // The static operations.
      static DomainParticipantReportTypeSupport_ptr _duplicate (DomainParticipantReportTypeSupport_ptr obj);

      static void _tao_release (DomainParticipantReportTypeSupport_ptr obj);

      static DomainParticipantReportTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static DomainParticipantReportTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DomainParticipantReportTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DomainParticipantReportTypeSupport (void);

      

      virtual ~DomainParticipantReportTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportTypeSupport (const DomainParticipantReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportTypeSupport (DomainParticipantReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportTypeSupport &operator= (const DomainParticipantReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportTypeSupport &operator= (DomainParticipantReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DOMAINPARTICIPANTREPORTDATAWRITER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DOMAINPARTICIPANTREPORTDATAWRITER__VAR_OUT_CH_

    class DomainParticipantReportDataWriter;
    typedef DomainParticipantReportDataWriter *DomainParticipantReportDataWriter_ptr;
    typedef TAO_Objref_Var_T<DomainParticipantReportDataWriter> DomainParticipantReportDataWriter_var;
    typedef TAO_Objref_Out_T<DomainParticipantReportDataWriter> DomainParticipantReportDataWriter_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DomainParticipantReportDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DomainParticipantReportDataWriter_ptr _ptr_type;
      typedef DomainParticipantReportDataWriter_var _var_type;
      typedef DomainParticipantReportDataWriter_out _out_type;

      // The static operations.
      static DomainParticipantReportDataWriter_ptr _duplicate (DomainParticipantReportDataWriter_ptr obj);

      static void _tao_release (DomainParticipantReportDataWriter_ptr obj);

      static DomainParticipantReportDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static DomainParticipantReportDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DomainParticipantReportDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::OpenDDS::DCPS::DomainParticipantReport & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::OpenDDS::DCPS::DomainParticipantReport & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::OpenDDS::DCPS::DomainParticipantReport & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::OpenDDS::DCPS::DomainParticipantReport & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::OpenDDS::DCPS::DomainParticipantReport & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::OpenDDS::DCPS::DomainParticipantReport & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::OpenDDS::DCPS::DomainParticipantReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::OpenDDS::DCPS::DomainParticipantReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::DomainParticipantReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::DomainParticipantReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DomainParticipantReportDataWriter (void);

      

      virtual ~DomainParticipantReportDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportDataWriter (const DomainParticipantReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportDataWriter (DomainParticipantReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportDataWriter &operator= (const DomainParticipantReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportDataWriter &operator= (DomainParticipantReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DOMAINPARTICIPANTREPORTDATAREADER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DOMAINPARTICIPANTREPORTDATAREADER__VAR_OUT_CH_

    class DomainParticipantReportDataReader;
    typedef DomainParticipantReportDataReader *DomainParticipantReportDataReader_ptr;
    typedef TAO_Objref_Var_T<DomainParticipantReportDataReader> DomainParticipantReportDataReader_var;
    typedef TAO_Objref_Out_T<DomainParticipantReportDataReader> DomainParticipantReportDataReader_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DomainParticipantReportDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DomainParticipantReportDataReader_ptr _ptr_type;
      typedef DomainParticipantReportDataReader_var _var_type;
      typedef DomainParticipantReportDataReader_out _out_type;

      // The static operations.
      static DomainParticipantReportDataReader_ptr _duplicate (DomainParticipantReportDataReader_ptr obj);

      static void _tao_release (DomainParticipantReportDataReader_ptr obj);

      static DomainParticipantReportDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static DomainParticipantReportDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DomainParticipantReportDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::OpenDDS::DCPS::DomainParticipantReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::OpenDDS::DCPS::DomainParticipantReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::OpenDDS::DCPS::DomainParticipantReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::DomainParticipantReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::DomainParticipantReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DomainParticipantReportDataReader (void);

      

      virtual ~DomainParticipantReportDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportDataReader (const DomainParticipantReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportDataReader (DomainParticipantReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportDataReader &operator= (const DomainParticipantReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DomainParticipantReportDataReader &operator= (DomainParticipantReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };
  
  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
  
  } // module OpenDDS::DCPS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module OpenDDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace OpenDDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

  namespace DCPS
  {

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:99

    typedef ::TAO::DCPS::ZeroCopyDataSeq< OpenDDS::DCPS::TopicReport, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> TopicReportSeq;
    

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_TOPICREPORTTYPESUPPORT__VAR_OUT_CH_)
#define _OPENDDS_DCPS_TOPICREPORTTYPESUPPORT__VAR_OUT_CH_

    class TopicReportTypeSupport;
    typedef TopicReportTypeSupport *TopicReportTypeSupport_ptr;
    typedef TAO_Objref_Var_T<TopicReportTypeSupport> TopicReportTypeSupport_var;
    typedef TAO_Objref_Out_T<TopicReportTypeSupport> TopicReportTypeSupport_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export TopicReportTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef TopicReportTypeSupport_ptr _ptr_type;
      typedef TopicReportTypeSupport_var _var_type;
      typedef TopicReportTypeSupport_out _out_type;

      // The static operations.
      static TopicReportTypeSupport_ptr _duplicate (TopicReportTypeSupport_ptr obj);

      static void _tao_release (TopicReportTypeSupport_ptr obj);

      static TopicReportTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static TopicReportTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static TopicReportTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      TopicReportTypeSupport (void);

      

      virtual ~TopicReportTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (TopicReportTypeSupport (const TopicReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TopicReportTypeSupport (TopicReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (TopicReportTypeSupport &operator= (const TopicReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TopicReportTypeSupport &operator= (TopicReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_TOPICREPORTDATAWRITER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_TOPICREPORTDATAWRITER__VAR_OUT_CH_

    class TopicReportDataWriter;
    typedef TopicReportDataWriter *TopicReportDataWriter_ptr;
    typedef TAO_Objref_Var_T<TopicReportDataWriter> TopicReportDataWriter_var;
    typedef TAO_Objref_Out_T<TopicReportDataWriter> TopicReportDataWriter_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export TopicReportDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef TopicReportDataWriter_ptr _ptr_type;
      typedef TopicReportDataWriter_var _var_type;
      typedef TopicReportDataWriter_out _out_type;

      // The static operations.
      static TopicReportDataWriter_ptr _duplicate (TopicReportDataWriter_ptr obj);

      static void _tao_release (TopicReportDataWriter_ptr obj);

      static TopicReportDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static TopicReportDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static TopicReportDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::OpenDDS::DCPS::TopicReport & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::OpenDDS::DCPS::TopicReport & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::OpenDDS::DCPS::TopicReport & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::OpenDDS::DCPS::TopicReport & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::OpenDDS::DCPS::TopicReport & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::OpenDDS::DCPS::TopicReport & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::OpenDDS::DCPS::TopicReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::OpenDDS::DCPS::TopicReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::TopicReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::TopicReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      TopicReportDataWriter (void);

      

      virtual ~TopicReportDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (TopicReportDataWriter (const TopicReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TopicReportDataWriter (TopicReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (TopicReportDataWriter &operator= (const TopicReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TopicReportDataWriter &operator= (TopicReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_TOPICREPORTDATAREADER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_TOPICREPORTDATAREADER__VAR_OUT_CH_

    class TopicReportDataReader;
    typedef TopicReportDataReader *TopicReportDataReader_ptr;
    typedef TAO_Objref_Var_T<TopicReportDataReader> TopicReportDataReader_var;
    typedef TAO_Objref_Out_T<TopicReportDataReader> TopicReportDataReader_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export TopicReportDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef TopicReportDataReader_ptr _ptr_type;
      typedef TopicReportDataReader_var _var_type;
      typedef TopicReportDataReader_out _out_type;

      // The static operations.
      static TopicReportDataReader_ptr _duplicate (TopicReportDataReader_ptr obj);

      static void _tao_release (TopicReportDataReader_ptr obj);

      static TopicReportDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static TopicReportDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static TopicReportDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::OpenDDS::DCPS::TopicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::OpenDDS::DCPS::TopicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::OpenDDS::DCPS::TopicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::OpenDDS::DCPS::TopicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::OpenDDS::DCPS::TopicReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::OpenDDS::DCPS::TopicReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::OpenDDS::DCPS::TopicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::OpenDDS::DCPS::TopicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::OpenDDS::DCPS::TopicReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::OpenDDS::DCPS::TopicReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::OpenDDS::DCPS::TopicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::OpenDDS::DCPS::TopicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::OpenDDS::DCPS::TopicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::OpenDDS::DCPS::TopicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::OpenDDS::DCPS::TopicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::TopicReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::TopicReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      TopicReportDataReader (void);

      

      virtual ~TopicReportDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (TopicReportDataReader (const TopicReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TopicReportDataReader (TopicReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (TopicReportDataReader &operator= (const TopicReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TopicReportDataReader &operator= (TopicReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };
  
  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
  
  } // module OpenDDS::DCPS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module OpenDDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace OpenDDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

  namespace DCPS
  {

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:99

    typedef ::TAO::DCPS::ZeroCopyDataSeq< OpenDDS::DCPS::PublisherReport, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> PublisherReportSeq;
    

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_PUBLISHERREPORTTYPESUPPORT__VAR_OUT_CH_)
#define _OPENDDS_DCPS_PUBLISHERREPORTTYPESUPPORT__VAR_OUT_CH_

    class PublisherReportTypeSupport;
    typedef PublisherReportTypeSupport *PublisherReportTypeSupport_ptr;
    typedef TAO_Objref_Var_T<PublisherReportTypeSupport> PublisherReportTypeSupport_var;
    typedef TAO_Objref_Out_T<PublisherReportTypeSupport> PublisherReportTypeSupport_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export PublisherReportTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef PublisherReportTypeSupport_ptr _ptr_type;
      typedef PublisherReportTypeSupport_var _var_type;
      typedef PublisherReportTypeSupport_out _out_type;

      // The static operations.
      static PublisherReportTypeSupport_ptr _duplicate (PublisherReportTypeSupport_ptr obj);

      static void _tao_release (PublisherReportTypeSupport_ptr obj);

      static PublisherReportTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static PublisherReportTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static PublisherReportTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      PublisherReportTypeSupport (void);

      

      virtual ~PublisherReportTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (PublisherReportTypeSupport (const PublisherReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (PublisherReportTypeSupport (PublisherReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (PublisherReportTypeSupport &operator= (const PublisherReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (PublisherReportTypeSupport &operator= (PublisherReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_PUBLISHERREPORTDATAWRITER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_PUBLISHERREPORTDATAWRITER__VAR_OUT_CH_

    class PublisherReportDataWriter;
    typedef PublisherReportDataWriter *PublisherReportDataWriter_ptr;
    typedef TAO_Objref_Var_T<PublisherReportDataWriter> PublisherReportDataWriter_var;
    typedef TAO_Objref_Out_T<PublisherReportDataWriter> PublisherReportDataWriter_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export PublisherReportDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef PublisherReportDataWriter_ptr _ptr_type;
      typedef PublisherReportDataWriter_var _var_type;
      typedef PublisherReportDataWriter_out _out_type;

      // The static operations.
      static PublisherReportDataWriter_ptr _duplicate (PublisherReportDataWriter_ptr obj);

      static void _tao_release (PublisherReportDataWriter_ptr obj);

      static PublisherReportDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static PublisherReportDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static PublisherReportDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::OpenDDS::DCPS::PublisherReport & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::OpenDDS::DCPS::PublisherReport & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::OpenDDS::DCPS::PublisherReport & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::OpenDDS::DCPS::PublisherReport & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::OpenDDS::DCPS::PublisherReport & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::OpenDDS::DCPS::PublisherReport & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::OpenDDS::DCPS::PublisherReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::OpenDDS::DCPS::PublisherReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::PublisherReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::PublisherReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      PublisherReportDataWriter (void);

      

      virtual ~PublisherReportDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (PublisherReportDataWriter (const PublisherReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (PublisherReportDataWriter (PublisherReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (PublisherReportDataWriter &operator= (const PublisherReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (PublisherReportDataWriter &operator= (PublisherReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_PUBLISHERREPORTDATAREADER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_PUBLISHERREPORTDATAREADER__VAR_OUT_CH_

    class PublisherReportDataReader;
    typedef PublisherReportDataReader *PublisherReportDataReader_ptr;
    typedef TAO_Objref_Var_T<PublisherReportDataReader> PublisherReportDataReader_var;
    typedef TAO_Objref_Out_T<PublisherReportDataReader> PublisherReportDataReader_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export PublisherReportDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef PublisherReportDataReader_ptr _ptr_type;
      typedef PublisherReportDataReader_var _var_type;
      typedef PublisherReportDataReader_out _out_type;

      // The static operations.
      static PublisherReportDataReader_ptr _duplicate (PublisherReportDataReader_ptr obj);

      static void _tao_release (PublisherReportDataReader_ptr obj);

      static PublisherReportDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static PublisherReportDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static PublisherReportDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::OpenDDS::DCPS::PublisherReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::OpenDDS::DCPS::PublisherReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::OpenDDS::DCPS::PublisherReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::OpenDDS::DCPS::PublisherReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::OpenDDS::DCPS::PublisherReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::OpenDDS::DCPS::PublisherReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::OpenDDS::DCPS::PublisherReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::OpenDDS::DCPS::PublisherReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::OpenDDS::DCPS::PublisherReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::OpenDDS::DCPS::PublisherReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::OpenDDS::DCPS::PublisherReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::OpenDDS::DCPS::PublisherReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::OpenDDS::DCPS::PublisherReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::OpenDDS::DCPS::PublisherReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::OpenDDS::DCPS::PublisherReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::PublisherReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::PublisherReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      PublisherReportDataReader (void);

      

      virtual ~PublisherReportDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (PublisherReportDataReader (const PublisherReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (PublisherReportDataReader (PublisherReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (PublisherReportDataReader &operator= (const PublisherReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (PublisherReportDataReader &operator= (PublisherReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };
  
  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
  
  } // module OpenDDS::DCPS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module OpenDDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace OpenDDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

  namespace DCPS
  {

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:99

    typedef ::TAO::DCPS::ZeroCopyDataSeq< OpenDDS::DCPS::SubscriberReport, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> SubscriberReportSeq;
    

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_SUBSCRIBERREPORTTYPESUPPORT__VAR_OUT_CH_)
#define _OPENDDS_DCPS_SUBSCRIBERREPORTTYPESUPPORT__VAR_OUT_CH_

    class SubscriberReportTypeSupport;
    typedef SubscriberReportTypeSupport *SubscriberReportTypeSupport_ptr;
    typedef TAO_Objref_Var_T<SubscriberReportTypeSupport> SubscriberReportTypeSupport_var;
    typedef TAO_Objref_Out_T<SubscriberReportTypeSupport> SubscriberReportTypeSupport_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export SubscriberReportTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef SubscriberReportTypeSupport_ptr _ptr_type;
      typedef SubscriberReportTypeSupport_var _var_type;
      typedef SubscriberReportTypeSupport_out _out_type;

      // The static operations.
      static SubscriberReportTypeSupport_ptr _duplicate (SubscriberReportTypeSupport_ptr obj);

      static void _tao_release (SubscriberReportTypeSupport_ptr obj);

      static SubscriberReportTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static SubscriberReportTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static SubscriberReportTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      SubscriberReportTypeSupport (void);

      

      virtual ~SubscriberReportTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportTypeSupport (const SubscriberReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportTypeSupport (SubscriberReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportTypeSupport &operator= (const SubscriberReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportTypeSupport &operator= (SubscriberReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_SUBSCRIBERREPORTDATAWRITER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_SUBSCRIBERREPORTDATAWRITER__VAR_OUT_CH_

    class SubscriberReportDataWriter;
    typedef SubscriberReportDataWriter *SubscriberReportDataWriter_ptr;
    typedef TAO_Objref_Var_T<SubscriberReportDataWriter> SubscriberReportDataWriter_var;
    typedef TAO_Objref_Out_T<SubscriberReportDataWriter> SubscriberReportDataWriter_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export SubscriberReportDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef SubscriberReportDataWriter_ptr _ptr_type;
      typedef SubscriberReportDataWriter_var _var_type;
      typedef SubscriberReportDataWriter_out _out_type;

      // The static operations.
      static SubscriberReportDataWriter_ptr _duplicate (SubscriberReportDataWriter_ptr obj);

      static void _tao_release (SubscriberReportDataWriter_ptr obj);

      static SubscriberReportDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static SubscriberReportDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static SubscriberReportDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::OpenDDS::DCPS::SubscriberReport & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::OpenDDS::DCPS::SubscriberReport & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::OpenDDS::DCPS::SubscriberReport & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::OpenDDS::DCPS::SubscriberReport & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::OpenDDS::DCPS::SubscriberReport & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::OpenDDS::DCPS::SubscriberReport & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::OpenDDS::DCPS::SubscriberReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::OpenDDS::DCPS::SubscriberReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::SubscriberReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::SubscriberReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      SubscriberReportDataWriter (void);

      

      virtual ~SubscriberReportDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportDataWriter (const SubscriberReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportDataWriter (SubscriberReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportDataWriter &operator= (const SubscriberReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportDataWriter &operator= (SubscriberReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_SUBSCRIBERREPORTDATAREADER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_SUBSCRIBERREPORTDATAREADER__VAR_OUT_CH_

    class SubscriberReportDataReader;
    typedef SubscriberReportDataReader *SubscriberReportDataReader_ptr;
    typedef TAO_Objref_Var_T<SubscriberReportDataReader> SubscriberReportDataReader_var;
    typedef TAO_Objref_Out_T<SubscriberReportDataReader> SubscriberReportDataReader_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export SubscriberReportDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef SubscriberReportDataReader_ptr _ptr_type;
      typedef SubscriberReportDataReader_var _var_type;
      typedef SubscriberReportDataReader_out _out_type;

      // The static operations.
      static SubscriberReportDataReader_ptr _duplicate (SubscriberReportDataReader_ptr obj);

      static void _tao_release (SubscriberReportDataReader_ptr obj);

      static SubscriberReportDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static SubscriberReportDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static SubscriberReportDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::OpenDDS::DCPS::SubscriberReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::OpenDDS::DCPS::SubscriberReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::OpenDDS::DCPS::SubscriberReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::OpenDDS::DCPS::SubscriberReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::OpenDDS::DCPS::SubscriberReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::OpenDDS::DCPS::SubscriberReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::OpenDDS::DCPS::SubscriberReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::OpenDDS::DCPS::SubscriberReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::OpenDDS::DCPS::SubscriberReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::OpenDDS::DCPS::SubscriberReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::OpenDDS::DCPS::SubscriberReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::OpenDDS::DCPS::SubscriberReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::OpenDDS::DCPS::SubscriberReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::OpenDDS::DCPS::SubscriberReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::OpenDDS::DCPS::SubscriberReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::SubscriberReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::SubscriberReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      SubscriberReportDataReader (void);

      

      virtual ~SubscriberReportDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportDataReader (const SubscriberReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportDataReader (SubscriberReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportDataReader &operator= (const SubscriberReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (SubscriberReportDataReader &operator= (SubscriberReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };
  
  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
  
  } // module OpenDDS::DCPS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module OpenDDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace OpenDDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

  namespace DCPS
  {

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:99

    typedef ::TAO::DCPS::ZeroCopyDataSeq< OpenDDS::DCPS::DataWriterReport, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> DataWriterReportSeq;
    

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAWRITERREPORTTYPESUPPORT__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAWRITERREPORTTYPESUPPORT__VAR_OUT_CH_

    class DataWriterReportTypeSupport;
    typedef DataWriterReportTypeSupport *DataWriterReportTypeSupport_ptr;
    typedef TAO_Objref_Var_T<DataWriterReportTypeSupport> DataWriterReportTypeSupport_var;
    typedef TAO_Objref_Out_T<DataWriterReportTypeSupport> DataWriterReportTypeSupport_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataWriterReportTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataWriterReportTypeSupport_ptr _ptr_type;
      typedef DataWriterReportTypeSupport_var _var_type;
      typedef DataWriterReportTypeSupport_out _out_type;

      // The static operations.
      static DataWriterReportTypeSupport_ptr _duplicate (DataWriterReportTypeSupport_ptr obj);

      static void _tao_release (DataWriterReportTypeSupport_ptr obj);

      static DataWriterReportTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static DataWriterReportTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataWriterReportTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataWriterReportTypeSupport (void);

      

      virtual ~DataWriterReportTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportTypeSupport (const DataWriterReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportTypeSupport (DataWriterReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportTypeSupport &operator= (const DataWriterReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportTypeSupport &operator= (DataWriterReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAWRITERREPORTDATAWRITER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAWRITERREPORTDATAWRITER__VAR_OUT_CH_

    class DataWriterReportDataWriter;
    typedef DataWriterReportDataWriter *DataWriterReportDataWriter_ptr;
    typedef TAO_Objref_Var_T<DataWriterReportDataWriter> DataWriterReportDataWriter_var;
    typedef TAO_Objref_Out_T<DataWriterReportDataWriter> DataWriterReportDataWriter_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataWriterReportDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataWriterReportDataWriter_ptr _ptr_type;
      typedef DataWriterReportDataWriter_var _var_type;
      typedef DataWriterReportDataWriter_out _out_type;

      // The static operations.
      static DataWriterReportDataWriter_ptr _duplicate (DataWriterReportDataWriter_ptr obj);

      static void _tao_release (DataWriterReportDataWriter_ptr obj);

      static DataWriterReportDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static DataWriterReportDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataWriterReportDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::OpenDDS::DCPS::DataWriterReport & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::OpenDDS::DCPS::DataWriterReport & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::OpenDDS::DCPS::DataWriterReport & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::OpenDDS::DCPS::DataWriterReport & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::OpenDDS::DCPS::DataWriterReport & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::OpenDDS::DCPS::DataWriterReport & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::OpenDDS::DCPS::DataWriterReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::OpenDDS::DCPS::DataWriterReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::DataWriterReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::DataWriterReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataWriterReportDataWriter (void);

      

      virtual ~DataWriterReportDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportDataWriter (const DataWriterReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportDataWriter (DataWriterReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportDataWriter &operator= (const DataWriterReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportDataWriter &operator= (DataWriterReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAWRITERREPORTDATAREADER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAWRITERREPORTDATAREADER__VAR_OUT_CH_

    class DataWriterReportDataReader;
    typedef DataWriterReportDataReader *DataWriterReportDataReader_ptr;
    typedef TAO_Objref_Var_T<DataWriterReportDataReader> DataWriterReportDataReader_var;
    typedef TAO_Objref_Out_T<DataWriterReportDataReader> DataWriterReportDataReader_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataWriterReportDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataWriterReportDataReader_ptr _ptr_type;
      typedef DataWriterReportDataReader_var _var_type;
      typedef DataWriterReportDataReader_out _out_type;

      // The static operations.
      static DataWriterReportDataReader_ptr _duplicate (DataWriterReportDataReader_ptr obj);

      static void _tao_release (DataWriterReportDataReader_ptr obj);

      static DataWriterReportDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static DataWriterReportDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataWriterReportDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::OpenDDS::DCPS::DataWriterReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::OpenDDS::DCPS::DataWriterReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::OpenDDS::DCPS::DataWriterReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::OpenDDS::DCPS::DataWriterReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::OpenDDS::DCPS::DataWriterReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::OpenDDS::DCPS::DataWriterReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::OpenDDS::DCPS::DataWriterReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::OpenDDS::DCPS::DataWriterReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::OpenDDS::DCPS::DataWriterReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::OpenDDS::DCPS::DataWriterReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::OpenDDS::DCPS::DataWriterReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::OpenDDS::DCPS::DataWriterReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::OpenDDS::DCPS::DataWriterReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::OpenDDS::DCPS::DataWriterReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::OpenDDS::DCPS::DataWriterReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::DataWriterReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::DataWriterReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataWriterReportDataReader (void);

      

      virtual ~DataWriterReportDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportDataReader (const DataWriterReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportDataReader (DataWriterReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportDataReader &operator= (const DataWriterReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterReportDataReader &operator= (DataWriterReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };
  
  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
  
  } // module OpenDDS::DCPS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module OpenDDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace OpenDDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

  namespace DCPS
  {

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:99

    typedef ::TAO::DCPS::ZeroCopyDataSeq< OpenDDS::DCPS::DataWriterPeriodicReport, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> DataWriterPeriodicReportSeq;
    

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAWRITERPERIODICREPORTTYPESUPPORT__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAWRITERPERIODICREPORTTYPESUPPORT__VAR_OUT_CH_

    class DataWriterPeriodicReportTypeSupport;
    typedef DataWriterPeriodicReportTypeSupport *DataWriterPeriodicReportTypeSupport_ptr;
    typedef TAO_Objref_Var_T<DataWriterPeriodicReportTypeSupport> DataWriterPeriodicReportTypeSupport_var;
    typedef TAO_Objref_Out_T<DataWriterPeriodicReportTypeSupport> DataWriterPeriodicReportTypeSupport_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataWriterPeriodicReportTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataWriterPeriodicReportTypeSupport_ptr _ptr_type;
      typedef DataWriterPeriodicReportTypeSupport_var _var_type;
      typedef DataWriterPeriodicReportTypeSupport_out _out_type;

      // The static operations.
      static DataWriterPeriodicReportTypeSupport_ptr _duplicate (DataWriterPeriodicReportTypeSupport_ptr obj);

      static void _tao_release (DataWriterPeriodicReportTypeSupport_ptr obj);

      static DataWriterPeriodicReportTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static DataWriterPeriodicReportTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataWriterPeriodicReportTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataWriterPeriodicReportTypeSupport (void);

      

      virtual ~DataWriterPeriodicReportTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportTypeSupport (const DataWriterPeriodicReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportTypeSupport (DataWriterPeriodicReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportTypeSupport &operator= (const DataWriterPeriodicReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportTypeSupport &operator= (DataWriterPeriodicReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAWRITERPERIODICREPORTDATAWRITER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAWRITERPERIODICREPORTDATAWRITER__VAR_OUT_CH_

    class DataWriterPeriodicReportDataWriter;
    typedef DataWriterPeriodicReportDataWriter *DataWriterPeriodicReportDataWriter_ptr;
    typedef TAO_Objref_Var_T<DataWriterPeriodicReportDataWriter> DataWriterPeriodicReportDataWriter_var;
    typedef TAO_Objref_Out_T<DataWriterPeriodicReportDataWriter> DataWriterPeriodicReportDataWriter_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataWriterPeriodicReportDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataWriterPeriodicReportDataWriter_ptr _ptr_type;
      typedef DataWriterPeriodicReportDataWriter_var _var_type;
      typedef DataWriterPeriodicReportDataWriter_out _out_type;

      // The static operations.
      static DataWriterPeriodicReportDataWriter_ptr _duplicate (DataWriterPeriodicReportDataWriter_ptr obj);

      static void _tao_release (DataWriterPeriodicReportDataWriter_ptr obj);

      static DataWriterPeriodicReportDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static DataWriterPeriodicReportDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataWriterPeriodicReportDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::OpenDDS::DCPS::DataWriterPeriodicReport & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::OpenDDS::DCPS::DataWriterPeriodicReport & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::OpenDDS::DCPS::DataWriterPeriodicReport & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::OpenDDS::DCPS::DataWriterPeriodicReport & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::OpenDDS::DCPS::DataWriterPeriodicReport & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::OpenDDS::DCPS::DataWriterPeriodicReport & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::OpenDDS::DCPS::DataWriterPeriodicReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::OpenDDS::DCPS::DataWriterPeriodicReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::DataWriterPeriodicReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::DataWriterPeriodicReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataWriterPeriodicReportDataWriter (void);

      

      virtual ~DataWriterPeriodicReportDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportDataWriter (const DataWriterPeriodicReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportDataWriter (DataWriterPeriodicReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportDataWriter &operator= (const DataWriterPeriodicReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportDataWriter &operator= (DataWriterPeriodicReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAWRITERPERIODICREPORTDATAREADER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAWRITERPERIODICREPORTDATAREADER__VAR_OUT_CH_

    class DataWriterPeriodicReportDataReader;
    typedef DataWriterPeriodicReportDataReader *DataWriterPeriodicReportDataReader_ptr;
    typedef TAO_Objref_Var_T<DataWriterPeriodicReportDataReader> DataWriterPeriodicReportDataReader_var;
    typedef TAO_Objref_Out_T<DataWriterPeriodicReportDataReader> DataWriterPeriodicReportDataReader_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataWriterPeriodicReportDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataWriterPeriodicReportDataReader_ptr _ptr_type;
      typedef DataWriterPeriodicReportDataReader_var _var_type;
      typedef DataWriterPeriodicReportDataReader_out _out_type;

      // The static operations.
      static DataWriterPeriodicReportDataReader_ptr _duplicate (DataWriterPeriodicReportDataReader_ptr obj);

      static void _tao_release (DataWriterPeriodicReportDataReader_ptr obj);

      static DataWriterPeriodicReportDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static DataWriterPeriodicReportDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataWriterPeriodicReportDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::OpenDDS::DCPS::DataWriterPeriodicReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::OpenDDS::DCPS::DataWriterPeriodicReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::OpenDDS::DCPS::DataWriterPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::DataWriterPeriodicReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::DataWriterPeriodicReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataWriterPeriodicReportDataReader (void);

      

      virtual ~DataWriterPeriodicReportDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportDataReader (const DataWriterPeriodicReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportDataReader (DataWriterPeriodicReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportDataReader &operator= (const DataWriterPeriodicReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataWriterPeriodicReportDataReader &operator= (DataWriterPeriodicReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };
  
  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
  
  } // module OpenDDS::DCPS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module OpenDDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace OpenDDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

  namespace DCPS
  {

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:99

    typedef ::TAO::DCPS::ZeroCopyDataSeq< OpenDDS::DCPS::DataReaderReport, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> DataReaderReportSeq;
    

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAREADERREPORTTYPESUPPORT__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAREADERREPORTTYPESUPPORT__VAR_OUT_CH_

    class DataReaderReportTypeSupport;
    typedef DataReaderReportTypeSupport *DataReaderReportTypeSupport_ptr;
    typedef TAO_Objref_Var_T<DataReaderReportTypeSupport> DataReaderReportTypeSupport_var;
    typedef TAO_Objref_Out_T<DataReaderReportTypeSupport> DataReaderReportTypeSupport_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataReaderReportTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataReaderReportTypeSupport_ptr _ptr_type;
      typedef DataReaderReportTypeSupport_var _var_type;
      typedef DataReaderReportTypeSupport_out _out_type;

      // The static operations.
      static DataReaderReportTypeSupport_ptr _duplicate (DataReaderReportTypeSupport_ptr obj);

      static void _tao_release (DataReaderReportTypeSupport_ptr obj);

      static DataReaderReportTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static DataReaderReportTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataReaderReportTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataReaderReportTypeSupport (void);

      

      virtual ~DataReaderReportTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportTypeSupport (const DataReaderReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportTypeSupport (DataReaderReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportTypeSupport &operator= (const DataReaderReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportTypeSupport &operator= (DataReaderReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAREADERREPORTDATAWRITER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAREADERREPORTDATAWRITER__VAR_OUT_CH_

    class DataReaderReportDataWriter;
    typedef DataReaderReportDataWriter *DataReaderReportDataWriter_ptr;
    typedef TAO_Objref_Var_T<DataReaderReportDataWriter> DataReaderReportDataWriter_var;
    typedef TAO_Objref_Out_T<DataReaderReportDataWriter> DataReaderReportDataWriter_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataReaderReportDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataReaderReportDataWriter_ptr _ptr_type;
      typedef DataReaderReportDataWriter_var _var_type;
      typedef DataReaderReportDataWriter_out _out_type;

      // The static operations.
      static DataReaderReportDataWriter_ptr _duplicate (DataReaderReportDataWriter_ptr obj);

      static void _tao_release (DataReaderReportDataWriter_ptr obj);

      static DataReaderReportDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static DataReaderReportDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataReaderReportDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::OpenDDS::DCPS::DataReaderReport & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::OpenDDS::DCPS::DataReaderReport & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::OpenDDS::DCPS::DataReaderReport & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::OpenDDS::DCPS::DataReaderReport & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::OpenDDS::DCPS::DataReaderReport & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::OpenDDS::DCPS::DataReaderReport & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::OpenDDS::DCPS::DataReaderReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::OpenDDS::DCPS::DataReaderReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::DataReaderReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::DataReaderReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataReaderReportDataWriter (void);

      

      virtual ~DataReaderReportDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportDataWriter (const DataReaderReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportDataWriter (DataReaderReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportDataWriter &operator= (const DataReaderReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportDataWriter &operator= (DataReaderReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAREADERREPORTDATAREADER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAREADERREPORTDATAREADER__VAR_OUT_CH_

    class DataReaderReportDataReader;
    typedef DataReaderReportDataReader *DataReaderReportDataReader_ptr;
    typedef TAO_Objref_Var_T<DataReaderReportDataReader> DataReaderReportDataReader_var;
    typedef TAO_Objref_Out_T<DataReaderReportDataReader> DataReaderReportDataReader_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataReaderReportDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataReaderReportDataReader_ptr _ptr_type;
      typedef DataReaderReportDataReader_var _var_type;
      typedef DataReaderReportDataReader_out _out_type;

      // The static operations.
      static DataReaderReportDataReader_ptr _duplicate (DataReaderReportDataReader_ptr obj);

      static void _tao_release (DataReaderReportDataReader_ptr obj);

      static DataReaderReportDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static DataReaderReportDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataReaderReportDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::OpenDDS::DCPS::DataReaderReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::OpenDDS::DCPS::DataReaderReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::OpenDDS::DCPS::DataReaderReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::OpenDDS::DCPS::DataReaderReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::OpenDDS::DCPS::DataReaderReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::OpenDDS::DCPS::DataReaderReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::OpenDDS::DCPS::DataReaderReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::OpenDDS::DCPS::DataReaderReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::OpenDDS::DCPS::DataReaderReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::OpenDDS::DCPS::DataReaderReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::OpenDDS::DCPS::DataReaderReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::OpenDDS::DCPS::DataReaderReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::OpenDDS::DCPS::DataReaderReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::OpenDDS::DCPS::DataReaderReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::OpenDDS::DCPS::DataReaderReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::DataReaderReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::DataReaderReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataReaderReportDataReader (void);

      

      virtual ~DataReaderReportDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportDataReader (const DataReaderReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportDataReader (DataReaderReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportDataReader &operator= (const DataReaderReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderReportDataReader &operator= (DataReaderReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };
  
  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
  
  } // module OpenDDS::DCPS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module OpenDDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace OpenDDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

  namespace DCPS
  {

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:99

    typedef ::TAO::DCPS::ZeroCopyDataSeq< OpenDDS::DCPS::DataReaderPeriodicReport, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> DataReaderPeriodicReportSeq;
    

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAREADERPERIODICREPORTTYPESUPPORT__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAREADERPERIODICREPORTTYPESUPPORT__VAR_OUT_CH_

    class DataReaderPeriodicReportTypeSupport;
    typedef DataReaderPeriodicReportTypeSupport *DataReaderPeriodicReportTypeSupport_ptr;
    typedef TAO_Objref_Var_T<DataReaderPeriodicReportTypeSupport> DataReaderPeriodicReportTypeSupport_var;
    typedef TAO_Objref_Out_T<DataReaderPeriodicReportTypeSupport> DataReaderPeriodicReportTypeSupport_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataReaderPeriodicReportTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataReaderPeriodicReportTypeSupport_ptr _ptr_type;
      typedef DataReaderPeriodicReportTypeSupport_var _var_type;
      typedef DataReaderPeriodicReportTypeSupport_out _out_type;

      // The static operations.
      static DataReaderPeriodicReportTypeSupport_ptr _duplicate (DataReaderPeriodicReportTypeSupport_ptr obj);

      static void _tao_release (DataReaderPeriodicReportTypeSupport_ptr obj);

      static DataReaderPeriodicReportTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static DataReaderPeriodicReportTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataReaderPeriodicReportTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataReaderPeriodicReportTypeSupport (void);

      

      virtual ~DataReaderPeriodicReportTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportTypeSupport (const DataReaderPeriodicReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportTypeSupport (DataReaderPeriodicReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportTypeSupport &operator= (const DataReaderPeriodicReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportTypeSupport &operator= (DataReaderPeriodicReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAREADERPERIODICREPORTDATAWRITER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAREADERPERIODICREPORTDATAWRITER__VAR_OUT_CH_

    class DataReaderPeriodicReportDataWriter;
    typedef DataReaderPeriodicReportDataWriter *DataReaderPeriodicReportDataWriter_ptr;
    typedef TAO_Objref_Var_T<DataReaderPeriodicReportDataWriter> DataReaderPeriodicReportDataWriter_var;
    typedef TAO_Objref_Out_T<DataReaderPeriodicReportDataWriter> DataReaderPeriodicReportDataWriter_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataReaderPeriodicReportDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataReaderPeriodicReportDataWriter_ptr _ptr_type;
      typedef DataReaderPeriodicReportDataWriter_var _var_type;
      typedef DataReaderPeriodicReportDataWriter_out _out_type;

      // The static operations.
      static DataReaderPeriodicReportDataWriter_ptr _duplicate (DataReaderPeriodicReportDataWriter_ptr obj);

      static void _tao_release (DataReaderPeriodicReportDataWriter_ptr obj);

      static DataReaderPeriodicReportDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static DataReaderPeriodicReportDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataReaderPeriodicReportDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::OpenDDS::DCPS::DataReaderPeriodicReport & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::OpenDDS::DCPS::DataReaderPeriodicReport & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::OpenDDS::DCPS::DataReaderPeriodicReport & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::OpenDDS::DCPS::DataReaderPeriodicReport & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::OpenDDS::DCPS::DataReaderPeriodicReport & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::OpenDDS::DCPS::DataReaderPeriodicReport & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::OpenDDS::DCPS::DataReaderPeriodicReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::OpenDDS::DCPS::DataReaderPeriodicReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::DataReaderPeriodicReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::DataReaderPeriodicReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataReaderPeriodicReportDataWriter (void);

      

      virtual ~DataReaderPeriodicReportDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportDataWriter (const DataReaderPeriodicReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportDataWriter (DataReaderPeriodicReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportDataWriter &operator= (const DataReaderPeriodicReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportDataWriter &operator= (DataReaderPeriodicReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_DATAREADERPERIODICREPORTDATAREADER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAREADERPERIODICREPORTDATAREADER__VAR_OUT_CH_

    class DataReaderPeriodicReportDataReader;
    typedef DataReaderPeriodicReportDataReader *DataReaderPeriodicReportDataReader_ptr;
    typedef TAO_Objref_Var_T<DataReaderPeriodicReportDataReader> DataReaderPeriodicReportDataReader_var;
    typedef TAO_Objref_Out_T<DataReaderPeriodicReportDataReader> DataReaderPeriodicReportDataReader_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export DataReaderPeriodicReportDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef DataReaderPeriodicReportDataReader_ptr _ptr_type;
      typedef DataReaderPeriodicReportDataReader_var _var_type;
      typedef DataReaderPeriodicReportDataReader_out _out_type;

      // The static operations.
      static DataReaderPeriodicReportDataReader_ptr _duplicate (DataReaderPeriodicReportDataReader_ptr obj);

      static void _tao_release (DataReaderPeriodicReportDataReader_ptr obj);

      static DataReaderPeriodicReportDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static DataReaderPeriodicReportDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataReaderPeriodicReportDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::OpenDDS::DCPS::DataReaderPeriodicReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::OpenDDS::DCPS::DataReaderPeriodicReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::OpenDDS::DCPS::DataReaderPeriodicReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::DataReaderPeriodicReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::DataReaderPeriodicReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataReaderPeriodicReportDataReader (void);

      

      virtual ~DataReaderPeriodicReportDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportDataReader (const DataReaderPeriodicReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportDataReader (DataReaderPeriodicReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportDataReader &operator= (const DataReaderPeriodicReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (DataReaderPeriodicReportDataReader &operator= (DataReaderPeriodicReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };
  
  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
  
  } // module OpenDDS::DCPS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module OpenDDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace OpenDDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

  namespace DCPS
  {

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:99

    typedef ::TAO::DCPS::ZeroCopyDataSeq< OpenDDS::DCPS::TransportReport, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> TransportReportSeq;
    

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_TRANSPORTREPORTTYPESUPPORT__VAR_OUT_CH_)
#define _OPENDDS_DCPS_TRANSPORTREPORTTYPESUPPORT__VAR_OUT_CH_

    class TransportReportTypeSupport;
    typedef TransportReportTypeSupport *TransportReportTypeSupport_ptr;
    typedef TAO_Objref_Var_T<TransportReportTypeSupport> TransportReportTypeSupport_var;
    typedef TAO_Objref_Out_T<TransportReportTypeSupport> TransportReportTypeSupport_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export TransportReportTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef TransportReportTypeSupport_ptr _ptr_type;
      typedef TransportReportTypeSupport_var _var_type;
      typedef TransportReportTypeSupport_out _out_type;

      // The static operations.
      static TransportReportTypeSupport_ptr _duplicate (TransportReportTypeSupport_ptr obj);

      static void _tao_release (TransportReportTypeSupport_ptr obj);

      static TransportReportTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static TransportReportTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static TransportReportTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      TransportReportTypeSupport (void);

      

      virtual ~TransportReportTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (TransportReportTypeSupport (const TransportReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TransportReportTypeSupport (TransportReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (TransportReportTypeSupport &operator= (const TransportReportTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TransportReportTypeSupport &operator= (TransportReportTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_TRANSPORTREPORTDATAWRITER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_TRANSPORTREPORTDATAWRITER__VAR_OUT_CH_

    class TransportReportDataWriter;
    typedef TransportReportDataWriter *TransportReportDataWriter_ptr;
    typedef TAO_Objref_Var_T<TransportReportDataWriter> TransportReportDataWriter_var;
    typedef TAO_Objref_Out_T<TransportReportDataWriter> TransportReportDataWriter_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export TransportReportDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef TransportReportDataWriter_ptr _ptr_type;
      typedef TransportReportDataWriter_var _var_type;
      typedef TransportReportDataWriter_out _out_type;

      // The static operations.
      static TransportReportDataWriter_ptr _duplicate (TransportReportDataWriter_ptr obj);

      static void _tao_release (TransportReportDataWriter_ptr obj);

      static TransportReportDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static TransportReportDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static TransportReportDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::OpenDDS::DCPS::TransportReport & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::OpenDDS::DCPS::TransportReport & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::OpenDDS::DCPS::TransportReport & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::OpenDDS::DCPS::TransportReport & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::OpenDDS::DCPS::TransportReport & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::OpenDDS::DCPS::TransportReport & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::OpenDDS::DCPS::TransportReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::OpenDDS::DCPS::TransportReport & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::TransportReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::TransportReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      TransportReportDataWriter (void);

      

      virtual ~TransportReportDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (TransportReportDataWriter (const TransportReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TransportReportDataWriter (TransportReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (TransportReportDataWriter &operator= (const TransportReportDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TransportReportDataWriter &operator= (TransportReportDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_OPENDDS_DCPS_TRANSPORTREPORTDATAREADER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_TRANSPORTREPORTDATAREADER__VAR_OUT_CH_

    class TransportReportDataReader;
    typedef TransportReportDataReader *TransportReportDataReader_ptr;
    typedef TAO_Objref_Var_T<TransportReportDataReader> TransportReportDataReader_var;
    typedef TAO_Objref_Out_T<TransportReportDataReader> TransportReportDataReader_out;
    

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

    class OpenDDS_monitor_Export TransportReportDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

      typedef TransportReportDataReader_ptr _ptr_type;
      typedef TransportReportDataReader_var _var_type;
      typedef TransportReportDataReader_out _out_type;

      // The static operations.
      static TransportReportDataReader_ptr _duplicate (TransportReportDataReader_ptr obj);

      static void _tao_release (TransportReportDataReader_ptr obj);

      static TransportReportDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static TransportReportDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static TransportReportDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::OpenDDS::DCPS::TransportReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::OpenDDS::DCPS::TransportReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::OpenDDS::DCPS::TransportReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::OpenDDS::DCPS::TransportReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::OpenDDS::DCPS::TransportReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::OpenDDS::DCPS::TransportReport & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::OpenDDS::DCPS::TransportReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::OpenDDS::DCPS::TransportReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::OpenDDS::DCPS::TransportReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::OpenDDS::DCPS::TransportReportSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::OpenDDS::DCPS::TransportReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::OpenDDS::DCPS::TransportReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::OpenDDS::DCPS::TransportReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::OpenDDS::DCPS::TransportReportSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::OpenDDS::DCPS::TransportReportSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::OpenDDS::DCPS::TransportReport & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::OpenDDS::DCPS::TransportReport & instance_data) = 0;

      // TAO_IDL - Generated from
      // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      TransportReportDataReader (void);

      

      virtual ~TransportReportDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (TransportReportDataReader (const TransportReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TransportReportDataReader (TransportReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (TransportReportDataReader &operator= (const TransportReportDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (TransportReportDataReader &operator= (TransportReportDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };
  
  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
  
  } // module OpenDDS::DCPS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module OpenDDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:66


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_traits.cpp:60


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_OPENDDS_DCPS_SERVICEPARTICIPANTREPORTTYPESUPPORT__TRAITS_)
#define _OPENDDS_DCPS_SERVICEPARTICIPANTREPORTTYPESUPPORT__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::ServiceParticipantReportTypeSupport>
  {
    static ::OpenDDS::DCPS::ServiceParticipantReportTypeSupport_ptr duplicate (
        ::OpenDDS::DCPS::ServiceParticipantReportTypeSupport_ptr p);
    static void release (
        ::OpenDDS::DCPS::ServiceParticipantReportTypeSupport_ptr p);
    static ::OpenDDS::DCPS::ServiceParticipantReportTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::ServiceParticipantReportTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_SERVICEPARTICIPANTREPORTDATAWRITER__TRAITS_)
#define _OPENDDS_DCPS_SERVICEPARTICIPANTREPORTDATAWRITER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::ServiceParticipantReportDataWriter>
  {
    static ::OpenDDS::DCPS::ServiceParticipantReportDataWriter_ptr duplicate (
        ::OpenDDS::DCPS::ServiceParticipantReportDataWriter_ptr p);
    static void release (
        ::OpenDDS::DCPS::ServiceParticipantReportDataWriter_ptr p);
    static ::OpenDDS::DCPS::ServiceParticipantReportDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::ServiceParticipantReportDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_SERVICEPARTICIPANTREPORTDATAREADER__TRAITS_)
#define _OPENDDS_DCPS_SERVICEPARTICIPANTREPORTDATAREADER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::ServiceParticipantReportDataReader>
  {
    static ::OpenDDS::DCPS::ServiceParticipantReportDataReader_ptr duplicate (
        ::OpenDDS::DCPS::ServiceParticipantReportDataReader_ptr p);
    static void release (
        ::OpenDDS::DCPS::ServiceParticipantReportDataReader_ptr p);
    static ::OpenDDS::DCPS::ServiceParticipantReportDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::ServiceParticipantReportDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DOMAINPARTICIPANTREPORTTYPESUPPORT__TRAITS_)
#define _OPENDDS_DCPS_DOMAINPARTICIPANTREPORTTYPESUPPORT__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DomainParticipantReportTypeSupport>
  {
    static ::OpenDDS::DCPS::DomainParticipantReportTypeSupport_ptr duplicate (
        ::OpenDDS::DCPS::DomainParticipantReportTypeSupport_ptr p);
    static void release (
        ::OpenDDS::DCPS::DomainParticipantReportTypeSupport_ptr p);
    static ::OpenDDS::DCPS::DomainParticipantReportTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DomainParticipantReportTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DOMAINPARTICIPANTREPORTDATAWRITER__TRAITS_)
#define _OPENDDS_DCPS_DOMAINPARTICIPANTREPORTDATAWRITER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DomainParticipantReportDataWriter>
  {
    static ::OpenDDS::DCPS::DomainParticipantReportDataWriter_ptr duplicate (
        ::OpenDDS::DCPS::DomainParticipantReportDataWriter_ptr p);
    static void release (
        ::OpenDDS::DCPS::DomainParticipantReportDataWriter_ptr p);
    static ::OpenDDS::DCPS::DomainParticipantReportDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DomainParticipantReportDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DOMAINPARTICIPANTREPORTDATAREADER__TRAITS_)
#define _OPENDDS_DCPS_DOMAINPARTICIPANTREPORTDATAREADER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DomainParticipantReportDataReader>
  {
    static ::OpenDDS::DCPS::DomainParticipantReportDataReader_ptr duplicate (
        ::OpenDDS::DCPS::DomainParticipantReportDataReader_ptr p);
    static void release (
        ::OpenDDS::DCPS::DomainParticipantReportDataReader_ptr p);
    static ::OpenDDS::DCPS::DomainParticipantReportDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DomainParticipantReportDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_TOPICREPORTTYPESUPPORT__TRAITS_)
#define _OPENDDS_DCPS_TOPICREPORTTYPESUPPORT__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::TopicReportTypeSupport>
  {
    static ::OpenDDS::DCPS::TopicReportTypeSupport_ptr duplicate (
        ::OpenDDS::DCPS::TopicReportTypeSupport_ptr p);
    static void release (
        ::OpenDDS::DCPS::TopicReportTypeSupport_ptr p);
    static ::OpenDDS::DCPS::TopicReportTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::TopicReportTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_TOPICREPORTDATAWRITER__TRAITS_)
#define _OPENDDS_DCPS_TOPICREPORTDATAWRITER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::TopicReportDataWriter>
  {
    static ::OpenDDS::DCPS::TopicReportDataWriter_ptr duplicate (
        ::OpenDDS::DCPS::TopicReportDataWriter_ptr p);
    static void release (
        ::OpenDDS::DCPS::TopicReportDataWriter_ptr p);
    static ::OpenDDS::DCPS::TopicReportDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::TopicReportDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_TOPICREPORTDATAREADER__TRAITS_)
#define _OPENDDS_DCPS_TOPICREPORTDATAREADER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::TopicReportDataReader>
  {
    static ::OpenDDS::DCPS::TopicReportDataReader_ptr duplicate (
        ::OpenDDS::DCPS::TopicReportDataReader_ptr p);
    static void release (
        ::OpenDDS::DCPS::TopicReportDataReader_ptr p);
    static ::OpenDDS::DCPS::TopicReportDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::TopicReportDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_PUBLISHERREPORTTYPESUPPORT__TRAITS_)
#define _OPENDDS_DCPS_PUBLISHERREPORTTYPESUPPORT__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::PublisherReportTypeSupport>
  {
    static ::OpenDDS::DCPS::PublisherReportTypeSupport_ptr duplicate (
        ::OpenDDS::DCPS::PublisherReportTypeSupport_ptr p);
    static void release (
        ::OpenDDS::DCPS::PublisherReportTypeSupport_ptr p);
    static ::OpenDDS::DCPS::PublisherReportTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::PublisherReportTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_PUBLISHERREPORTDATAWRITER__TRAITS_)
#define _OPENDDS_DCPS_PUBLISHERREPORTDATAWRITER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::PublisherReportDataWriter>
  {
    static ::OpenDDS::DCPS::PublisherReportDataWriter_ptr duplicate (
        ::OpenDDS::DCPS::PublisherReportDataWriter_ptr p);
    static void release (
        ::OpenDDS::DCPS::PublisherReportDataWriter_ptr p);
    static ::OpenDDS::DCPS::PublisherReportDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::PublisherReportDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_PUBLISHERREPORTDATAREADER__TRAITS_)
#define _OPENDDS_DCPS_PUBLISHERREPORTDATAREADER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::PublisherReportDataReader>
  {
    static ::OpenDDS::DCPS::PublisherReportDataReader_ptr duplicate (
        ::OpenDDS::DCPS::PublisherReportDataReader_ptr p);
    static void release (
        ::OpenDDS::DCPS::PublisherReportDataReader_ptr p);
    static ::OpenDDS::DCPS::PublisherReportDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::PublisherReportDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_SUBSCRIBERREPORTTYPESUPPORT__TRAITS_)
#define _OPENDDS_DCPS_SUBSCRIBERREPORTTYPESUPPORT__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::SubscriberReportTypeSupport>
  {
    static ::OpenDDS::DCPS::SubscriberReportTypeSupport_ptr duplicate (
        ::OpenDDS::DCPS::SubscriberReportTypeSupport_ptr p);
    static void release (
        ::OpenDDS::DCPS::SubscriberReportTypeSupport_ptr p);
    static ::OpenDDS::DCPS::SubscriberReportTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::SubscriberReportTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_SUBSCRIBERREPORTDATAWRITER__TRAITS_)
#define _OPENDDS_DCPS_SUBSCRIBERREPORTDATAWRITER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::SubscriberReportDataWriter>
  {
    static ::OpenDDS::DCPS::SubscriberReportDataWriter_ptr duplicate (
        ::OpenDDS::DCPS::SubscriberReportDataWriter_ptr p);
    static void release (
        ::OpenDDS::DCPS::SubscriberReportDataWriter_ptr p);
    static ::OpenDDS::DCPS::SubscriberReportDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::SubscriberReportDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_SUBSCRIBERREPORTDATAREADER__TRAITS_)
#define _OPENDDS_DCPS_SUBSCRIBERREPORTDATAREADER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::SubscriberReportDataReader>
  {
    static ::OpenDDS::DCPS::SubscriberReportDataReader_ptr duplicate (
        ::OpenDDS::DCPS::SubscriberReportDataReader_ptr p);
    static void release (
        ::OpenDDS::DCPS::SubscriberReportDataReader_ptr p);
    static ::OpenDDS::DCPS::SubscriberReportDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::SubscriberReportDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAWRITERREPORTTYPESUPPORT__TRAITS_)
#define _OPENDDS_DCPS_DATAWRITERREPORTTYPESUPPORT__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataWriterReportTypeSupport>
  {
    static ::OpenDDS::DCPS::DataWriterReportTypeSupport_ptr duplicate (
        ::OpenDDS::DCPS::DataWriterReportTypeSupport_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataWriterReportTypeSupport_ptr p);
    static ::OpenDDS::DCPS::DataWriterReportTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataWriterReportTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAWRITERREPORTDATAWRITER__TRAITS_)
#define _OPENDDS_DCPS_DATAWRITERREPORTDATAWRITER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataWriterReportDataWriter>
  {
    static ::OpenDDS::DCPS::DataWriterReportDataWriter_ptr duplicate (
        ::OpenDDS::DCPS::DataWriterReportDataWriter_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataWriterReportDataWriter_ptr p);
    static ::OpenDDS::DCPS::DataWriterReportDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataWriterReportDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAWRITERREPORTDATAREADER__TRAITS_)
#define _OPENDDS_DCPS_DATAWRITERREPORTDATAREADER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataWriterReportDataReader>
  {
    static ::OpenDDS::DCPS::DataWriterReportDataReader_ptr duplicate (
        ::OpenDDS::DCPS::DataWriterReportDataReader_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataWriterReportDataReader_ptr p);
    static ::OpenDDS::DCPS::DataWriterReportDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataWriterReportDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAWRITERPERIODICREPORTTYPESUPPORT__TRAITS_)
#define _OPENDDS_DCPS_DATAWRITERPERIODICREPORTTYPESUPPORT__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataWriterPeriodicReportTypeSupport>
  {
    static ::OpenDDS::DCPS::DataWriterPeriodicReportTypeSupport_ptr duplicate (
        ::OpenDDS::DCPS::DataWriterPeriodicReportTypeSupport_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataWriterPeriodicReportTypeSupport_ptr p);
    static ::OpenDDS::DCPS::DataWriterPeriodicReportTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataWriterPeriodicReportTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAWRITERPERIODICREPORTDATAWRITER__TRAITS_)
#define _OPENDDS_DCPS_DATAWRITERPERIODICREPORTDATAWRITER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataWriterPeriodicReportDataWriter>
  {
    static ::OpenDDS::DCPS::DataWriterPeriodicReportDataWriter_ptr duplicate (
        ::OpenDDS::DCPS::DataWriterPeriodicReportDataWriter_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataWriterPeriodicReportDataWriter_ptr p);
    static ::OpenDDS::DCPS::DataWriterPeriodicReportDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataWriterPeriodicReportDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAWRITERPERIODICREPORTDATAREADER__TRAITS_)
#define _OPENDDS_DCPS_DATAWRITERPERIODICREPORTDATAREADER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataWriterPeriodicReportDataReader>
  {
    static ::OpenDDS::DCPS::DataWriterPeriodicReportDataReader_ptr duplicate (
        ::OpenDDS::DCPS::DataWriterPeriodicReportDataReader_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataWriterPeriodicReportDataReader_ptr p);
    static ::OpenDDS::DCPS::DataWriterPeriodicReportDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataWriterPeriodicReportDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAREADERREPORTTYPESUPPORT__TRAITS_)
#define _OPENDDS_DCPS_DATAREADERREPORTTYPESUPPORT__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataReaderReportTypeSupport>
  {
    static ::OpenDDS::DCPS::DataReaderReportTypeSupport_ptr duplicate (
        ::OpenDDS::DCPS::DataReaderReportTypeSupport_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataReaderReportTypeSupport_ptr p);
    static ::OpenDDS::DCPS::DataReaderReportTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataReaderReportTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAREADERREPORTDATAWRITER__TRAITS_)
#define _OPENDDS_DCPS_DATAREADERREPORTDATAWRITER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataReaderReportDataWriter>
  {
    static ::OpenDDS::DCPS::DataReaderReportDataWriter_ptr duplicate (
        ::OpenDDS::DCPS::DataReaderReportDataWriter_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataReaderReportDataWriter_ptr p);
    static ::OpenDDS::DCPS::DataReaderReportDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataReaderReportDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAREADERREPORTDATAREADER__TRAITS_)
#define _OPENDDS_DCPS_DATAREADERREPORTDATAREADER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataReaderReportDataReader>
  {
    static ::OpenDDS::DCPS::DataReaderReportDataReader_ptr duplicate (
        ::OpenDDS::DCPS::DataReaderReportDataReader_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataReaderReportDataReader_ptr p);
    static ::OpenDDS::DCPS::DataReaderReportDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataReaderReportDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAREADERPERIODICREPORTTYPESUPPORT__TRAITS_)
#define _OPENDDS_DCPS_DATAREADERPERIODICREPORTTYPESUPPORT__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataReaderPeriodicReportTypeSupport>
  {
    static ::OpenDDS::DCPS::DataReaderPeriodicReportTypeSupport_ptr duplicate (
        ::OpenDDS::DCPS::DataReaderPeriodicReportTypeSupport_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataReaderPeriodicReportTypeSupport_ptr p);
    static ::OpenDDS::DCPS::DataReaderPeriodicReportTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataReaderPeriodicReportTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAREADERPERIODICREPORTDATAWRITER__TRAITS_)
#define _OPENDDS_DCPS_DATAREADERPERIODICREPORTDATAWRITER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataReaderPeriodicReportDataWriter>
  {
    static ::OpenDDS::DCPS::DataReaderPeriodicReportDataWriter_ptr duplicate (
        ::OpenDDS::DCPS::DataReaderPeriodicReportDataWriter_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataReaderPeriodicReportDataWriter_ptr p);
    static ::OpenDDS::DCPS::DataReaderPeriodicReportDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataReaderPeriodicReportDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAREADERPERIODICREPORTDATAREADER__TRAITS_)
#define _OPENDDS_DCPS_DATAREADERPERIODICREPORTDATAREADER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::DataReaderPeriodicReportDataReader>
  {
    static ::OpenDDS::DCPS::DataReaderPeriodicReportDataReader_ptr duplicate (
        ::OpenDDS::DCPS::DataReaderPeriodicReportDataReader_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataReaderPeriodicReportDataReader_ptr p);
    static ::OpenDDS::DCPS::DataReaderPeriodicReportDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataReaderPeriodicReportDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_TRANSPORTREPORTTYPESUPPORT__TRAITS_)
#define _OPENDDS_DCPS_TRANSPORTREPORTTYPESUPPORT__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::TransportReportTypeSupport>
  {
    static ::OpenDDS::DCPS::TransportReportTypeSupport_ptr duplicate (
        ::OpenDDS::DCPS::TransportReportTypeSupport_ptr p);
    static void release (
        ::OpenDDS::DCPS::TransportReportTypeSupport_ptr p);
    static ::OpenDDS::DCPS::TransportReportTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::TransportReportTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_TRANSPORTREPORTDATAWRITER__TRAITS_)
#define _OPENDDS_DCPS_TRANSPORTREPORTDATAWRITER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::TransportReportDataWriter>
  {
    static ::OpenDDS::DCPS::TransportReportDataWriter_ptr duplicate (
        ::OpenDDS::DCPS::TransportReportDataWriter_ptr p);
    static void release (
        ::OpenDDS::DCPS::TransportReportDataWriter_ptr p);
    static ::OpenDDS::DCPS::TransportReportDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::TransportReportDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_TRANSPORTREPORTDATAREADER__TRAITS_)
#define _OPENDDS_DCPS_TRANSPORTREPORTDATAREADER__TRAITS_

  template<>
  struct OpenDDS_monitor_Export Objref_Traits< ::OpenDDS::DCPS::TransportReportDataReader>
  {
    static ::OpenDDS::DCPS::TransportReportDataReader_ptr duplicate (
        ::OpenDDS::DCPS::TransportReportDataReader_ptr p);
    static void release (
        ::OpenDDS::DCPS::TransportReportDataReader_ptr p);
    static ::OpenDDS::DCPS::TransportReportDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::TransportReportDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_codegen.cpp:1686


OPENDDS_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "monitorTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

