// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.12
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union OpenDDS::DCPS::ValueUnion
// *************************************************************

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union/discriminant_ci.cpp:55

ACE_INLINE
void
OpenDDS::DCPS::ValueUnion::_default ()
{
  this->_reset ();
  this->disc_ = static_cast <OpenDDS::DCPS::ValueEnumType> (-1);
}

// Accessor to set the discriminant.
ACE_INLINE
void
OpenDDS::DCPS::ValueUnion::_d (OpenDDS::DCPS::ValueEnumType discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
OpenDDS::DCPS::ValueEnumType
OpenDDS::DCPS::ValueUnion::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::ValueUnion::integer_value (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::INTEGER_TYPE;
  // Set the value.
  this->u_.integer_value_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
OpenDDS::DCPS::ValueUnion::integer_value (void) const
{
  return this->u_.integer_value_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::ValueUnion::double_value (CORBA::Double val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::DOUBLE_TYPE;
  // Set the value.
  this->u_.double_value_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Double
OpenDDS::DCPS::ValueUnion::double_value (void) const
{
  return this->u_.double_value_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:862

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::ValueUnion::string_value (char *val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::STRING_TYPE;
  this->u_.string_value_ = val;
}

// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::ValueUnion::string_value (const char *val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::STRING_TYPE;
  // Set the value.
  this->u_.string_value_ = ::CORBA::string_dup (val);
}

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::ValueUnion::string_value (const ::CORBA::String_var &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::STRING_TYPE;
  // Set the value.
  ::CORBA::String_var string_value_var = val;
  this->u_.string_value_ = string_value_var._retn ();
}

ACE_INLINE
const char *
OpenDDS::DCPS::ValueUnion::string_value (void) const // get method
{
  return this->u_.string_value_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:1065

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::ValueUnion::stat_value (const OpenDDS::DCPS::Statistics &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::STATISTICS_TYPE;
  this->u_.stat_value_ = val;
}

// Readonly get method.
ACE_INLINE
const OpenDDS::DCPS::Statistics &
OpenDDS::DCPS::ValueUnion::stat_value (void) const
{
  return this->u_.stat_value_;
}

// Read/write get method.
ACE_INLINE
OpenDDS::DCPS::Statistics &
OpenDDS::DCPS::ValueUnion::stat_value (void)
{
  return this->u_.stat_value_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:788

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::ValueUnion::string_seq_value (const DDS::StringSeq &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::STRING_LIST_TYPE;
  ACE_NEW (
      this->u_.string_seq_value_,
      DDS::StringSeq (val)
    );
}

/// Readonly get method.
ACE_INLINE
const DDS::StringSeq &
OpenDDS::DCPS::ValueUnion::string_seq_value (void) const
{
  return *this->u_.string_seq_value_;
}

/// Read/write get method.
ACE_INLINE
DDS::StringSeq &
OpenDDS::DCPS::ValueUnion::string_seq_value (void)
{
  return *this->u_.string_seq_value_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union OpenDDS::DCPS::GenericReport
// *************************************************************

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union/discriminant_ci.cpp:55

ACE_INLINE
void
OpenDDS::DCPS::GenericReport::_default ()
{
  this->_reset ();
  this->disc_ = static_cast <OpenDDS::DCPS::ReportType> (-1);
}

// Accessor to set the discriminant.
ACE_INLINE
void
OpenDDS::DCPS::GenericReport::_d (OpenDDS::DCPS::ReportType discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
OpenDDS::DCPS::ReportType
OpenDDS::DCPS::GenericReport::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:1065

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::GenericReport::sp_report (const OpenDDS::DCPS::ServiceParticipantReport &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::SERVICE_PARTICIPANT_REPORT_TYPE;
  ACE_NEW (
      this->u_.sp_report_,
      OpenDDS::DCPS::ServiceParticipantReport (val)
    );
}

// Readonly get method.
ACE_INLINE
const OpenDDS::DCPS::ServiceParticipantReport &
OpenDDS::DCPS::GenericReport::sp_report (void) const
{
  return *this->u_.sp_report_;
}

// Read/write get method.
ACE_INLINE
OpenDDS::DCPS::ServiceParticipantReport &
OpenDDS::DCPS::GenericReport::sp_report (void)
{
  return *this->u_.sp_report_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:1065

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::GenericReport::dp_report (const OpenDDS::DCPS::DomainParticipantReport &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::DOMAIN_PARTICIPANT_REPORT_TYPE;
  ACE_NEW (
      this->u_.dp_report_,
      OpenDDS::DCPS::DomainParticipantReport (val)
    );
}

// Readonly get method.
ACE_INLINE
const OpenDDS::DCPS::DomainParticipantReport &
OpenDDS::DCPS::GenericReport::dp_report (void) const
{
  return *this->u_.dp_report_;
}

// Read/write get method.
ACE_INLINE
OpenDDS::DCPS::DomainParticipantReport &
OpenDDS::DCPS::GenericReport::dp_report (void)
{
  return *this->u_.dp_report_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:1065

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::GenericReport::topic_report (const OpenDDS::DCPS::TopicReport &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::TOPIC_REPORT_TYPE;
  ACE_NEW (
      this->u_.topic_report_,
      OpenDDS::DCPS::TopicReport (val)
    );
}

// Readonly get method.
ACE_INLINE
const OpenDDS::DCPS::TopicReport &
OpenDDS::DCPS::GenericReport::topic_report (void) const
{
  return *this->u_.topic_report_;
}

// Read/write get method.
ACE_INLINE
OpenDDS::DCPS::TopicReport &
OpenDDS::DCPS::GenericReport::topic_report (void)
{
  return *this->u_.topic_report_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:1065

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::GenericReport::publisher_report (const OpenDDS::DCPS::PublisherReport &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::PUBLISHER_REPORT_TYPE;
  ACE_NEW (
      this->u_.publisher_report_,
      OpenDDS::DCPS::PublisherReport (val)
    );
}

// Readonly get method.
ACE_INLINE
const OpenDDS::DCPS::PublisherReport &
OpenDDS::DCPS::GenericReport::publisher_report (void) const
{
  return *this->u_.publisher_report_;
}

// Read/write get method.
ACE_INLINE
OpenDDS::DCPS::PublisherReport &
OpenDDS::DCPS::GenericReport::publisher_report (void)
{
  return *this->u_.publisher_report_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:1065

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::GenericReport::subscriber_report (const OpenDDS::DCPS::SubscriberReport &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::SUBSCRIBER_REPORT_TYPE;
  ACE_NEW (
      this->u_.subscriber_report_,
      OpenDDS::DCPS::SubscriberReport (val)
    );
}

// Readonly get method.
ACE_INLINE
const OpenDDS::DCPS::SubscriberReport &
OpenDDS::DCPS::GenericReport::subscriber_report (void) const
{
  return *this->u_.subscriber_report_;
}

// Read/write get method.
ACE_INLINE
OpenDDS::DCPS::SubscriberReport &
OpenDDS::DCPS::GenericReport::subscriber_report (void)
{
  return *this->u_.subscriber_report_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:1065

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::GenericReport::dw_report (const OpenDDS::DCPS::DataWriterReport &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::DATA_WRITER_REPORT_TYPE;
  ACE_NEW (
      this->u_.dw_report_,
      OpenDDS::DCPS::DataWriterReport (val)
    );
}

// Readonly get method.
ACE_INLINE
const OpenDDS::DCPS::DataWriterReport &
OpenDDS::DCPS::GenericReport::dw_report (void) const
{
  return *this->u_.dw_report_;
}

// Read/write get method.
ACE_INLINE
OpenDDS::DCPS::DataWriterReport &
OpenDDS::DCPS::GenericReport::dw_report (void)
{
  return *this->u_.dw_report_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:1065

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::GenericReport::dw_per_report (const OpenDDS::DCPS::DataWriterPeriodicReport &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::DATA_WRITER_PERIODIC_REPORT_TYPE;
  ACE_NEW (
      this->u_.dw_per_report_,
      OpenDDS::DCPS::DataWriterPeriodicReport (val)
    );
}

// Readonly get method.
ACE_INLINE
const OpenDDS::DCPS::DataWriterPeriodicReport &
OpenDDS::DCPS::GenericReport::dw_per_report (void) const
{
  return *this->u_.dw_per_report_;
}

// Read/write get method.
ACE_INLINE
OpenDDS::DCPS::DataWriterPeriodicReport &
OpenDDS::DCPS::GenericReport::dw_per_report (void)
{
  return *this->u_.dw_per_report_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:1065

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::GenericReport::dr_report (const OpenDDS::DCPS::DataReaderReport &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::DATA_READER_REPORT_TYPE;
  ACE_NEW (
      this->u_.dr_report_,
      OpenDDS::DCPS::DataReaderReport (val)
    );
}

// Readonly get method.
ACE_INLINE
const OpenDDS::DCPS::DataReaderReport &
OpenDDS::DCPS::GenericReport::dr_report (void) const
{
  return *this->u_.dr_report_;
}

// Read/write get method.
ACE_INLINE
OpenDDS::DCPS::DataReaderReport &
OpenDDS::DCPS::GenericReport::dr_report (void)
{
  return *this->u_.dr_report_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:1065

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::GenericReport::dr_per_report (const OpenDDS::DCPS::DataReaderPeriodicReport &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::DATA_READER_PERIODIC_REPORT_TYPE;
  ACE_NEW (
      this->u_.dr_per_report_,
      OpenDDS::DCPS::DataReaderPeriodicReport (val)
    );
}

// Readonly get method.
ACE_INLINE
const OpenDDS::DCPS::DataReaderPeriodicReport &
OpenDDS::DCPS::GenericReport::dr_per_report (void) const
{
  return *this->u_.dr_per_report_;
}

// Read/write get method.
ACE_INLINE
OpenDDS::DCPS::DataReaderPeriodicReport &
OpenDDS::DCPS::GenericReport::dr_per_report (void)
{
  return *this->u_.dr_per_report_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:1065

/// Accessor to set the member.
ACE_INLINE
void
OpenDDS::DCPS::GenericReport::transport_report (const OpenDDS::DCPS::TransportReport &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = OpenDDS::DCPS::TRANSPORT_REPORT_TYPE;
  ACE_NEW (
      this->u_.transport_report_,
      OpenDDS::DCPS::TransportReport (val)
    );
}

// Readonly get method.
ACE_INLINE
const OpenDDS::DCPS::TransportReport &
OpenDDS::DCPS::GenericReport::transport_report (void) const
{
  return *this->u_.transport_report_;
}

// Read/write get method.
ACE_INLINE
OpenDDS::DCPS::TransportReport &
OpenDDS::DCPS::GenericReport::transport_report (void)
{
  return *this->u_.transport_report_;
}

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ci.cpp:59

ACE_INLINE
OpenDDS::DCPS::ProcessMonitor::ProcessMonitor (
    TAO_Stub *objref,
    ::CORBA::Boolean _tao_collocated,
    TAO_Abstract_ServantBase *servant,
    TAO_ORB_Core *oc)
  : ::CORBA::Object (objref, _tao_collocated, servant, oc)
{
}

ACE_INLINE
OpenDDS::DCPS::ProcessMonitor::ProcessMonitor (
    ::IOP::IOR *ior,
    TAO_ORB_Core *oc)
  : ::CORBA::Object (ior, oc)
{
}


OPENDDS_END_VERSIONED_NAMESPACE_DECL


