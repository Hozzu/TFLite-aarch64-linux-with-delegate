// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.12
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_codegen.cpp:149

#ifndef _TAO_IDL_DDSDCPSTOPICC_W3C02S_H_
#define _TAO_IDL_DDSDCPSTOPICC_W3C02S_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "dds/DCPS/dcps_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"
#include /**/ "dds/Versioned_Namespace.h"

#include "dds/DdsDcpsInfrastructureC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 12
#error This file should be regenerated with TAO_IDL
#endif

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace DDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_DOMAINPARTICIPANT__VAR_OUT_CH_)
#define _DDS_DOMAINPARTICIPANT__VAR_OUT_CH_

  class DomainParticipant;
  typedef DomainParticipant *DomainParticipant_ptr;
  typedef TAO_Objref_Var_T<DomainParticipant> DomainParticipant_var;
  typedef TAO_Objref_Out_T<DomainParticipant> DomainParticipant_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_TOPIC__VAR_OUT_CH_)
#define _DDS_TOPIC__VAR_OUT_CH_

  class Topic;
  typedef Topic *Topic_ptr;
  typedef TAO_Objref_Var_T<Topic> Topic_var;
  typedef TAO_Objref_Out_T<Topic> Topic_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_TOPICDESCRIPTION__VAR_OUT_CH_)
#define _DDS_TOPICDESCRIPTION__VAR_OUT_CH_

  class TopicDescription;
  typedef TopicDescription *TopicDescription_ptr;
  typedef TAO_Objref_Var_T<TopicDescription> TopicDescription_var;
  typedef TAO_Objref_Out_T<TopicDescription> TopicDescription_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export TopicDescription
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef TopicDescription_ptr _ptr_type;
    typedef TopicDescription_var _var_type;
    typedef TopicDescription_out _out_type;

    // The static operations.
    static TopicDescription_ptr _duplicate (TopicDescription_ptr obj);

    static void _tao_release (TopicDescription_ptr obj);

    static TopicDescription_ptr _narrow (::CORBA::Object_ptr obj);
    static TopicDescription_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TopicDescription_ptr _nil (void);

    virtual char * get_type_name (
      void) = 0;

    virtual char * get_name (
      void) = 0;

    virtual ::DDS::DomainParticipant_ptr get_participant (
      void) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    TopicDescription (void);

    

    virtual ~TopicDescription (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (TopicDescription (const TopicDescription &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (TopicDescription (TopicDescription &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (TopicDescription &operator= (const TopicDescription &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (TopicDescription &operator= (TopicDescription &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_TOPICLISTENER__VAR_OUT_CH_)
#define _DDS_TOPICLISTENER__VAR_OUT_CH_

  class TopicListener;
  typedef TopicListener *TopicListener_ptr;
  typedef TAO_Objref_Var_T<TopicListener> TopicListener_var;
  typedef TAO_Objref_Out_T<TopicListener> TopicListener_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export TopicListener
    : public virtual ::DDS::Listener
  
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef TopicListener_ptr _ptr_type;
    typedef TopicListener_var _var_type;
    typedef TopicListener_out _out_type;

    // The static operations.
    static TopicListener_ptr _duplicate (TopicListener_ptr obj);

    static void _tao_release (TopicListener_ptr obj);

    static TopicListener_ptr _narrow (::CORBA::Object_ptr obj);
    static TopicListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TopicListener_ptr _nil (void);

    virtual void on_inconsistent_topic (
      ::DDS::Topic_ptr the_topic,
      const ::DDS::InconsistentTopicStatus & status) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    TopicListener (void);

    

    virtual ~TopicListener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (TopicListener (const TopicListener &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (TopicListener (TopicListener &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (TopicListener &operator= (const TopicListener &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (TopicListener &operator= (TopicListener &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export Topic
    : public virtual ::DDS::Entity,
      public virtual ::DDS::TopicDescription
  
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef Topic_ptr _ptr_type;
    typedef Topic_var _var_type;
    typedef Topic_out _out_type;

    // The static operations.
    static Topic_ptr _duplicate (Topic_ptr obj);

    static void _tao_release (Topic_ptr obj);

    static Topic_ptr _narrow (::CORBA::Object_ptr obj);
    static Topic_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Topic_ptr _nil (void);

    virtual ::DDS::ReturnCode_t set_qos (
      const ::DDS::TopicQos & qos) = 0;

    virtual ::DDS::ReturnCode_t get_qos (
      ::DDS::TopicQos & qos) = 0;

    virtual ::DDS::ReturnCode_t set_listener (
      ::DDS::TopicListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    virtual ::DDS::TopicListener_ptr get_listener (
      void) = 0;

    virtual ::DDS::ReturnCode_t get_inconsistent_topic_status (
      ::DDS::InconsistentTopicStatus & a_status) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Topic (void);

    

    virtual ~Topic (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (Topic (const Topic &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (Topic (Topic &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (Topic &operator= (const Topic &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (Topic &operator= (Topic &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_CONTENTFILTEREDTOPIC__VAR_OUT_CH_)
#define _DDS_CONTENTFILTEREDTOPIC__VAR_OUT_CH_

  class ContentFilteredTopic;
  typedef ContentFilteredTopic *ContentFilteredTopic_ptr;
  typedef TAO_Objref_Var_T<ContentFilteredTopic> ContentFilteredTopic_var;
  typedef TAO_Objref_Out_T<ContentFilteredTopic> ContentFilteredTopic_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export ContentFilteredTopic
    : public virtual ::DDS::TopicDescription
  
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef ContentFilteredTopic_ptr _ptr_type;
    typedef ContentFilteredTopic_var _var_type;
    typedef ContentFilteredTopic_out _out_type;

    // The static operations.
    static ContentFilteredTopic_ptr _duplicate (ContentFilteredTopic_ptr obj);

    static void _tao_release (ContentFilteredTopic_ptr obj);

    static ContentFilteredTopic_ptr _narrow (::CORBA::Object_ptr obj);
    static ContentFilteredTopic_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ContentFilteredTopic_ptr _nil (void);

    virtual char * get_filter_expression (
      void) = 0;

    virtual ::DDS::ReturnCode_t get_expression_parameters (
      ::DDS::StringSeq & params) = 0;

    virtual ::DDS::ReturnCode_t set_expression_parameters (
      const ::DDS::StringSeq & expression_parameters) = 0;

    virtual ::DDS::Topic_ptr get_related_topic (
      void) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ContentFilteredTopic (void);

    

    virtual ~ContentFilteredTopic (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (ContentFilteredTopic (const ContentFilteredTopic &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ContentFilteredTopic (ContentFilteredTopic &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (ContentFilteredTopic &operator= (const ContentFilteredTopic &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ContentFilteredTopic &operator= (ContentFilteredTopic &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_MULTITOPIC__VAR_OUT_CH_)
#define _DDS_MULTITOPIC__VAR_OUT_CH_

  class MultiTopic;
  typedef MultiTopic *MultiTopic_ptr;
  typedef TAO_Objref_Var_T<MultiTopic> MultiTopic_var;
  typedef TAO_Objref_Out_T<MultiTopic> MultiTopic_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export MultiTopic
    : public virtual ::DDS::TopicDescription
  
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef MultiTopic_ptr _ptr_type;
    typedef MultiTopic_var _var_type;
    typedef MultiTopic_out _out_type;

    // The static operations.
    static MultiTopic_ptr _duplicate (MultiTopic_ptr obj);

    static void _tao_release (MultiTopic_ptr obj);

    static MultiTopic_ptr _narrow (::CORBA::Object_ptr obj);
    static MultiTopic_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static MultiTopic_ptr _nil (void);

    virtual char * get_subscription_expression (
      void) = 0;

    virtual ::DDS::ReturnCode_t get_expression_parameters (
      ::DDS::StringSeq & params) = 0;

    virtual ::DDS::ReturnCode_t set_expression_parameters (
      const ::DDS::StringSeq & expression_parameters) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    MultiTopic (void);

    

    virtual ~MultiTopic (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (MultiTopic (const MultiTopic &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (MultiTopic (MultiTopic &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (MultiTopic &operator= (const MultiTopic &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (MultiTopic &operator= (MultiTopic &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_TYPESUPPORT__VAR_OUT_CH_)
#define _DDS_TYPESUPPORT__VAR_OUT_CH_

  class TypeSupport;
  typedef TypeSupport *TypeSupport_ptr;
  typedef TAO_Objref_Var_T<TypeSupport> TypeSupport_var;
  typedef TAO_Objref_Out_T<TypeSupport> TypeSupport_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export TypeSupport
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef TypeSupport_ptr _ptr_type;
    typedef TypeSupport_var _var_type;
    typedef TypeSupport_out _out_type;

    // The static operations.
    static TypeSupport_ptr _duplicate (TypeSupport_ptr obj);

    static void _tao_release (TypeSupport_ptr obj);

    static TypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static TypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t register_type (
      ::DDS::DomainParticipant_ptr domain,
      const char * type_name) = 0;

    virtual char * get_type_name (
      void) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    TypeSupport (void);

    

    virtual ~TypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (TypeSupport (const TypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (TypeSupport (TypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (TypeSupport &operator= (const TypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (TypeSupport &operator= (TypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module DDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:66


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_traits.cpp:60


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_DDS_DOMAINPARTICIPANT__TRAITS_)
#define _DDS_DOMAINPARTICIPANT__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::DomainParticipant>
  {
    static ::DDS::DomainParticipant_ptr duplicate (
        ::DDS::DomainParticipant_ptr p);
    static void release (
        ::DDS::DomainParticipant_ptr p);
    static ::DDS::DomainParticipant_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DomainParticipant_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_TOPICDESCRIPTION__TRAITS_)
#define _DDS_TOPICDESCRIPTION__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::TopicDescription>
  {
    static ::DDS::TopicDescription_ptr duplicate (
        ::DDS::TopicDescription_ptr p);
    static void release (
        ::DDS::TopicDescription_ptr p);
    static ::DDS::TopicDescription_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::TopicDescription_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_TOPICLISTENER__TRAITS_)
#define _DDS_TOPICLISTENER__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::TopicListener>
  {
    static ::DDS::TopicListener_ptr duplicate (
        ::DDS::TopicListener_ptr p);
    static void release (
        ::DDS::TopicListener_ptr p);
    static ::DDS::TopicListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::TopicListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_TOPIC__TRAITS_)
#define _DDS_TOPIC__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Topic>
  {
    static ::DDS::Topic_ptr duplicate (
        ::DDS::Topic_ptr p);
    static void release (
        ::DDS::Topic_ptr p);
    static ::DDS::Topic_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Topic_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_CONTENTFILTEREDTOPIC__TRAITS_)
#define _DDS_CONTENTFILTEREDTOPIC__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::ContentFilteredTopic>
  {
    static ::DDS::ContentFilteredTopic_ptr duplicate (
        ::DDS::ContentFilteredTopic_ptr p);
    static void release (
        ::DDS::ContentFilteredTopic_ptr p);
    static ::DDS::ContentFilteredTopic_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::ContentFilteredTopic_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_MULTITOPIC__TRAITS_)
#define _DDS_MULTITOPIC__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::MultiTopic>
  {
    static ::DDS::MultiTopic_ptr duplicate (
        ::DDS::MultiTopic_ptr p);
    static void release (
        ::DDS::MultiTopic_ptr p);
    static ::DDS::MultiTopic_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::MultiTopic_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_TYPESUPPORT__TRAITS_)
#define _DDS_TYPESUPPORT__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::TypeSupport>
  {
    static ::DDS::TypeSupport_ptr duplicate (
        ::DDS::TypeSupport_ptr p);
    static void release (
        ::DDS::TypeSupport_ptr p);
    static ::DDS::TypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::TypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_codegen.cpp:1686


OPENDDS_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "DdsDcpsTopicC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

