// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.12
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_codegen.cpp:149

#ifndef _TAO_IDL_DDSDCPSSUBSCRIPTIONC_Y4XWZF_H_
#define _TAO_IDL_DDSDCPSSUBSCRIPTIONC_Y4XWZF_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "dds/DCPS/dcps_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"
#include /**/ "dds/Versioned_Namespace.h"

#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsDataReaderSeqC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 12
#error This file should be regenerated with TAO_IDL
#endif

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace DDS
{

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_TOPICDESCRIPTION__VAR_OUT_CH_)
#define _DDS_TOPICDESCRIPTION__VAR_OUT_CH_

  class TopicDescription;
  typedef TopicDescription *TopicDescription_ptr;
  typedef TAO_Objref_Var_T<TopicDescription> TopicDescription_var;
  typedef TAO_Objref_Out_T<TopicDescription> TopicDescription_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_DOMAINPARTICIPANT__VAR_OUT_CH_)
#define _DDS_DOMAINPARTICIPANT__VAR_OUT_CH_

  class DomainParticipant;
  typedef DomainParticipant *DomainParticipant_ptr;
  typedef TAO_Objref_Var_T<DomainParticipant> DomainParticipant_var;
  typedef TAO_Objref_Out_T<DomainParticipant> DomainParticipant_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_DATAREADER__VAR_OUT_CH_)
#define _DDS_DATAREADER__VAR_OUT_CH_

  class DataReader;
  typedef DataReader *DataReader_ptr;
  typedef TAO_Objref_Var_T<DataReader> DataReader_var;
  typedef TAO_Objref_Out_T<DataReader> DataReader_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_SUBSCRIBER__VAR_OUT_CH_)
#define _DDS_SUBSCRIBER__VAR_OUT_CH_

  class Subscriber;
  typedef Subscriber *Subscriber_ptr;
  typedef TAO_Objref_Var_T<Subscriber> Subscriber_var;
  typedef TAO_Objref_Out_T<Subscriber> Subscriber_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_DATAREADERLISTENER__VAR_OUT_CH_)
#define _DDS_DATAREADERLISTENER__VAR_OUT_CH_

  class DataReaderListener;
  typedef DataReaderListener *DataReaderListener_ptr;
  typedef TAO_Objref_Var_T<DataReaderListener> DataReaderListener_var;
  typedef TAO_Objref_Out_T<DataReaderListener> DataReaderListener_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export DataReaderListener
    : public virtual ::DDS::Listener
  
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef DataReaderListener_ptr _ptr_type;
    typedef DataReaderListener_var _var_type;
    typedef DataReaderListener_out _out_type;

    // The static operations.
    static DataReaderListener_ptr _duplicate (DataReaderListener_ptr obj);

    static void _tao_release (DataReaderListener_ptr obj);

    static DataReaderListener_ptr _narrow (::CORBA::Object_ptr obj);
    static DataReaderListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DataReaderListener_ptr _nil (void);

    virtual void on_requested_deadline_missed (
      ::DDS::DataReader_ptr reader,
      const ::DDS::RequestedDeadlineMissedStatus & status) = 0;

    virtual void on_requested_incompatible_qos (
      ::DDS::DataReader_ptr reader,
      const ::DDS::RequestedIncompatibleQosStatus & status) = 0;

    virtual void on_sample_rejected (
      ::DDS::DataReader_ptr reader,
      const ::DDS::SampleRejectedStatus & status) = 0;

    virtual void on_liveliness_changed (
      ::DDS::DataReader_ptr reader,
      const ::DDS::LivelinessChangedStatus & status) = 0;

    virtual void on_data_available (
      ::DDS::DataReader_ptr reader) = 0;

    virtual void on_subscription_matched (
      ::DDS::DataReader_ptr reader,
      const ::DDS::SubscriptionMatchedStatus & status) = 0;

    virtual void on_sample_lost (
      ::DDS::DataReader_ptr reader,
      const ::DDS::SampleLostStatus & status) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DataReaderListener (void);

    

    virtual ~DataReaderListener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (DataReaderListener (const DataReaderListener &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (DataReaderListener (DataReaderListener &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (DataReaderListener &operator= (const DataReaderListener &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (DataReaderListener &operator= (DataReaderListener &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_SUBSCRIBERLISTENER__VAR_OUT_CH_)
#define _DDS_SUBSCRIBERLISTENER__VAR_OUT_CH_

  class SubscriberListener;
  typedef SubscriberListener *SubscriberListener_ptr;
  typedef TAO_Objref_Var_T<SubscriberListener> SubscriberListener_var;
  typedef TAO_Objref_Out_T<SubscriberListener> SubscriberListener_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export SubscriberListener
    : public virtual ::DDS::DataReaderListener
  
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef SubscriberListener_ptr _ptr_type;
    typedef SubscriberListener_var _var_type;
    typedef SubscriberListener_out _out_type;

    // The static operations.
    static SubscriberListener_ptr _duplicate (SubscriberListener_ptr obj);

    static void _tao_release (SubscriberListener_ptr obj);

    static SubscriberListener_ptr _narrow (::CORBA::Object_ptr obj);
    static SubscriberListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SubscriberListener_ptr _nil (void);

    virtual void on_data_on_readers (
      ::DDS::Subscriber_ptr subs) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    SubscriberListener (void);

    

    virtual ~SubscriberListener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (SubscriberListener (const SubscriberListener &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (SubscriberListener (SubscriberListener &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (SubscriberListener &operator= (const SubscriberListener &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (SubscriberListener &operator= (SubscriberListener &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_READCONDITION__VAR_OUT_CH_)
#define _DDS_READCONDITION__VAR_OUT_CH_

  class ReadCondition;
  typedef ReadCondition *ReadCondition_ptr;
  typedef TAO_Objref_Var_T<ReadCondition> ReadCondition_var;
  typedef TAO_Objref_Out_T<ReadCondition> ReadCondition_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export ReadCondition
    : public virtual ::DDS::Condition
  
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef ReadCondition_ptr _ptr_type;
    typedef ReadCondition_var _var_type;
    typedef ReadCondition_out _out_type;

    // The static operations.
    static ReadCondition_ptr _duplicate (ReadCondition_ptr obj);

    static void _tao_release (ReadCondition_ptr obj);

    static ReadCondition_ptr _narrow (::CORBA::Object_ptr obj);
    static ReadCondition_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ReadCondition_ptr _nil (void);

    virtual ::DDS::SampleStateMask get_sample_state_mask (
      void) = 0;

    virtual ::DDS::ViewStateMask get_view_state_mask (
      void) = 0;

    virtual ::DDS::InstanceStateMask get_instance_state_mask (
      void) = 0;

    virtual ::DDS::DataReader_ptr get_datareader (
      void) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ReadCondition (void);

    

    virtual ~ReadCondition (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (ReadCondition (const ReadCondition &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ReadCondition (ReadCondition &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (ReadCondition &operator= (const ReadCondition &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ReadCondition &operator= (ReadCondition &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_DDS_QUERYCONDITION__VAR_OUT_CH_)
#define _DDS_QUERYCONDITION__VAR_OUT_CH_

  class QueryCondition;
  typedef QueryCondition *QueryCondition_ptr;
  typedef TAO_Objref_Var_T<QueryCondition> QueryCondition_var;
  typedef TAO_Objref_Out_T<QueryCondition> QueryCondition_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export QueryCondition
    : public virtual ::DDS::ReadCondition
  
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef QueryCondition_ptr _ptr_type;
    typedef QueryCondition_var _var_type;
    typedef QueryCondition_out _out_type;

    // The static operations.
    static QueryCondition_ptr _duplicate (QueryCondition_ptr obj);

    static void _tao_release (QueryCondition_ptr obj);

    static QueryCondition_ptr _narrow (::CORBA::Object_ptr obj);
    static QueryCondition_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static QueryCondition_ptr _nil (void);

    virtual char * get_query_expression (
      void) = 0;

    virtual ::DDS::ReturnCode_t get_query_parameters (
      ::DDS::StringSeq & query_parameters) = 0;

    virtual ::DDS::ReturnCode_t set_query_parameters (
      const ::DDS::StringSeq & query_parameters) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    QueryCondition (void);

    

    virtual ~QueryCondition (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (QueryCondition (const QueryCondition &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (QueryCondition (QueryCondition &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (QueryCondition &operator= (const QueryCondition &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (QueryCondition &operator= (QueryCondition &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export DataReader
    : public virtual ::DDS::Entity
  
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef DataReader_ptr _ptr_type;
    typedef DataReader_var _var_type;
    typedef DataReader_out _out_type;

    // The static operations.
    static DataReader_ptr _duplicate (DataReader_ptr obj);

    static void _tao_release (DataReader_ptr obj);

    static DataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static DataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DataReader_ptr _nil (void);

    virtual ::DDS::ReadCondition_ptr create_readcondition (
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::QueryCondition_ptr create_querycondition (
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states,
      const char * query_expression,
      const ::DDS::StringSeq & query_parameters) = 0;

    virtual ::DDS::ReturnCode_t delete_readcondition (
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t delete_contained_entities (
      void) = 0;

    virtual ::DDS::ReturnCode_t set_qos (
      const ::DDS::DataReaderQos & qos) = 0;

    virtual ::DDS::ReturnCode_t get_qos (
      ::DDS::DataReaderQos & qos) = 0;

    virtual ::DDS::ReturnCode_t set_listener (
      ::DDS::DataReaderListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    virtual ::DDS::DataReaderListener_ptr get_listener (
      void) = 0;

    virtual ::DDS::TopicDescription_ptr get_topicdescription (
      void) = 0;

    virtual ::DDS::Subscriber_ptr get_subscriber (
      void) = 0;

    virtual ::DDS::ReturnCode_t get_sample_rejected_status (
      ::DDS::SampleRejectedStatus & status) = 0;

    virtual ::DDS::ReturnCode_t get_liveliness_changed_status (
      ::DDS::LivelinessChangedStatus & status) = 0;

    virtual ::DDS::ReturnCode_t get_requested_deadline_missed_status (
      ::DDS::RequestedDeadlineMissedStatus & status) = 0;

    virtual ::DDS::ReturnCode_t get_requested_incompatible_qos_status (
      ::DDS::RequestedIncompatibleQosStatus & status) = 0;

    virtual ::DDS::ReturnCode_t get_subscription_matched_status (
      ::DDS::SubscriptionMatchedStatus & status) = 0;

    virtual ::DDS::ReturnCode_t get_sample_lost_status (
      ::DDS::SampleLostStatus & status) = 0;

    virtual ::DDS::ReturnCode_t wait_for_historical_data (
      const ::DDS::Duration_t & max_wait) = 0;

    virtual ::DDS::ReturnCode_t get_matched_publications (
      ::DDS::InstanceHandleSeq & publication_handles) = 0;

    virtual ::DDS::ReturnCode_t get_matched_publication_data (
      ::DDS::PublicationBuiltinTopicData & publication_data,
      ::DDS::InstanceHandle_t publication_handle) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DataReader (void);

    

    virtual ~DataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (DataReader (const DataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (DataReader (DataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (DataReader &operator= (const DataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (DataReader &operator= (DataReader &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

  class OpenDDS_Dcps_Export Subscriber
    : public virtual ::DDS::Entity
  
  {
  public:

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

    typedef Subscriber_ptr _ptr_type;
    typedef Subscriber_var _var_type;
    typedef Subscriber_out _out_type;

    // The static operations.
    static Subscriber_ptr _duplicate (Subscriber_ptr obj);

    static void _tao_release (Subscriber_ptr obj);

    static Subscriber_ptr _narrow (::CORBA::Object_ptr obj);
    static Subscriber_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Subscriber_ptr _nil (void);

    virtual ::DDS::DataReader_ptr create_datareader (
      ::DDS::TopicDescription_ptr a_topic,
      const ::DDS::DataReaderQos & qos,
      ::DDS::DataReaderListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    virtual ::DDS::ReturnCode_t delete_datareader (
      ::DDS::DataReader_ptr a_datareader) = 0;

    virtual ::DDS::ReturnCode_t delete_contained_entities (
      void) = 0;

    virtual ::DDS::DataReader_ptr lookup_datareader (
      const char * topic_name) = 0;

    virtual ::DDS::ReturnCode_t get_datareaders (
      ::DDS::DataReaderSeq & readers,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t notify_datareaders (
      void) = 0;

    virtual ::DDS::ReturnCode_t set_qos (
      const ::DDS::SubscriberQos & qos) = 0;

    virtual ::DDS::ReturnCode_t get_qos (
      ::DDS::SubscriberQos & qos) = 0;

    virtual ::DDS::ReturnCode_t set_listener (
      ::DDS::SubscriberListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    virtual ::DDS::SubscriberListener_ptr get_listener (
      void) = 0;

    virtual ::DDS::ReturnCode_t begin_access (
      void) = 0;

    virtual ::DDS::ReturnCode_t end_access (
      void) = 0;

    virtual ::DDS::DomainParticipant_ptr get_participant (
      void) = 0;

    virtual ::DDS::ReturnCode_t set_default_datareader_qos (
      const ::DDS::DataReaderQos & qos) = 0;

    virtual ::DDS::ReturnCode_t get_default_datareader_qos (
      ::DDS::DataReaderQos & qos) = 0;

    virtual ::DDS::ReturnCode_t copy_from_topic_qos (
      ::DDS::DataReaderQos & a_datareader_qos,
      const ::DDS::TopicQos & a_topic_qos) = 0;

    // TAO_IDL - Generated from
    // /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Subscriber (void);

    

    virtual ~Subscriber (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (Subscriber (const Subscriber &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (Subscriber (Subscriber &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (Subscriber &operator= (const Subscriber &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (Subscriber &operator= (Subscriber &&))
#endif /* ACE_HAS_CPP11 */
  };

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module DDS

// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:66


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_visitor_traits.cpp:60


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_DDS_TOPICDESCRIPTION__TRAITS_)
#define _DDS_TOPICDESCRIPTION__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::TopicDescription>
  {
    static ::DDS::TopicDescription_ptr duplicate (
        ::DDS::TopicDescription_ptr p);
    static void release (
        ::DDS::TopicDescription_ptr p);
    static ::DDS::TopicDescription_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::TopicDescription_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DOMAINPARTICIPANT__TRAITS_)
#define _DDS_DOMAINPARTICIPANT__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::DomainParticipant>
  {
    static ::DDS::DomainParticipant_ptr duplicate (
        ::DDS::DomainParticipant_ptr p);
    static void release (
        ::DDS::DomainParticipant_ptr p);
    static ::DDS::DomainParticipant_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DomainParticipant_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DATAREADERLISTENER__TRAITS_)
#define _DDS_DATAREADERLISTENER__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::DataReaderListener>
  {
    static ::DDS::DataReaderListener_ptr duplicate (
        ::DDS::DataReaderListener_ptr p);
    static void release (
        ::DDS::DataReaderListener_ptr p);
    static ::DDS::DataReaderListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DataReaderListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SUBSCRIBERLISTENER__TRAITS_)
#define _DDS_SUBSCRIBERLISTENER__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::SubscriberListener>
  {
    static ::DDS::SubscriberListener_ptr duplicate (
        ::DDS::SubscriberListener_ptr p);
    static void release (
        ::DDS::SubscriberListener_ptr p);
    static ::DDS::SubscriberListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::SubscriberListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_READCONDITION__TRAITS_)
#define _DDS_READCONDITION__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::ReadCondition>
  {
    static ::DDS::ReadCondition_ptr duplicate (
        ::DDS::ReadCondition_ptr p);
    static void release (
        ::DDS::ReadCondition_ptr p);
    static ::DDS::ReadCondition_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::ReadCondition_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_QUERYCONDITION__TRAITS_)
#define _DDS_QUERYCONDITION__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::QueryCondition>
  {
    static ::DDS::QueryCondition_ptr duplicate (
        ::DDS::QueryCondition_ptr p);
    static void release (
        ::DDS::QueryCondition_ptr p);
    static ::DDS::QueryCondition_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::QueryCondition_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DATAREADER__TRAITS_)
#define _DDS_DATAREADER__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::DataReader>
  {
    static ::DDS::DataReader_ptr duplicate (
        ::DDS::DataReader_ptr p);
    static void release (
        ::DDS::DataReader_ptr p);
    static ::DDS::DataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SUBSCRIBER__TRAITS_)
#define _DDS_SUBSCRIBER__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Subscriber>
  {
    static ::DDS::Subscriber_ptr duplicate (
        ::DDS::Subscriber_ptr p);
    static void release (
        ::DDS::Subscriber_ptr p);
    static ::DDS::Subscriber_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Subscriber_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// /home/shan/git/bsp/adcm_bsp_sa8195/sources/apps/apps_proc/poky/build/tmp-glibc/work/x86_64-linux/opendds-native/1.0+gitAUTOINC+0810ffc3f5-r7/git/ACE_TAO/TAO/TAO_IDL/be/be_codegen.cpp:1686


OPENDDS_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "DdsDcpsSubscriptionC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

